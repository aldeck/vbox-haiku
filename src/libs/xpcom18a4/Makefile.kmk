#
# Makefile for XPCOM.
#

#
# Copyright (C) 2006 InnoTek Systemberatung GmbH
#
# This file is part of VirtualBox Open Source Edition (OSE), as
# available from http://www.virtualbox.org. This file is free software;
# you can redistribute it and/or modify it under the terms of the GNU
# General Public License as published by the Free Software Foundation,
# in version 2 as it comes in the "COPYING" file of the VirtualBox OSE
# distribution. VirtualBox OSE is distributed in the hope that it will
# be useful, but WITHOUT ANY WARRANTY of any kind.
#
# If you received this file as part of a commercial VirtualBox
# distribution, then only the terms of your commercial VirtualBox
# license agreement apply instead of the previous paragraph.
#

DEPTH = ../../..
include $(PATH_KBUILD)/header.kmk


#
# Template for building the XPCOM libraries (shared).
#
TEMPLATE_XPCOM                     = XPCOM libraries (shared)
TEMPLATE_XPCOM_EXTENDS             = VBOXR3NP
TEMPLATE_XPCOM_ASTOOL              = $(TEMPLATE_VBOXR3NP_TOOL)
TEMPLATE_XPCOM_ASFLAGS             = $(NO_SUCH_VARIABLE)
TEMPLATE_XPCOM_ASDEFS              = $(NO_SUCH_VARIABLE)
TEMPLATE_XPCOM_CXXFLAGS            = -pipe -ansi -Wall -Wno-unused -Wno-non-virtual-dtor \
                                     $(VBOX_GCC_Wno-invalid-offsetof) -Wno-sign-compare -Wno-unused -Wno-ctor-dtor-privacy \
				     $(VBOX_GCC_fvisibility-inlines-hidden) $(VBOX_GCC_fvisibility-hidden)

TEMPLATE_XPCOM_CXXFLAGS.debug      = -fno-inline
TEMPLATE_XPCOM_CXXFLAGS.release    = -O
TEMPLATE_XPCOM_CXXFLAGS.profile    = -O
TEMPLATE_XPCOM_CXXFLAGS.darwin     = -fpascal-strings -fshort-wchar -fno-common -fno-rtti
TEMPLATE_XPCOM_CXXFLAGS.l4         = -fno-exceptions -nostdinc
TEMPLATE_XPCOM_CXXFLAGS.linux      = -pthread
TEMPLATE_XPCOM_CFLAGS              = -pipe -Wall -Wno-unused -Wno-parentheses -Wno-uninitialized $(VBOX_GCC_fvisibility-hidden)
TEMPLATE_XPCOM_CFLAGS.debug        = -fno-inline
TEMPLATE_XPCOM_CFLAGS.release      = -O
TEMPLATE_XPCOM_CFLAGS.profile      = -O
TEMPLATE_XPCOM_CFLAGS.l4           = -nostdinc
TEMPLATE_XPCOM_CFLAGS.linux        = -pthread -ansi
TEMPLATE_XPCOM_DEFS                = MOZILLA_CLIENT=1 NDEBUG=1 _IMPL_NS_COM
TEMPLATE_XPCOM_DEFS.x86            = i386=1
TEMPLATE_XPCOM_DEFS.amd64          = HAVE_VA_LIST_AS_ARRAY HAVE_VA_COPY VA_COPY\(a\,b\)=__builtin_va_copy\(a\,b\)
TEMPLATE_XPCOM_DEFS.darwin         = OSTYPE=\"Darwin8.8.1\" OSARCH=\"Darwin\" MOZ_DLL_SUFFIX=\".dylib\" XP_UNIX=1 XP_MACOSX=1 TARGET_CARBON=1 HAVE_VISIBILITY_ATTRIBUTE=1
TEMPLATE_XPCOM_DEFS.linux          = OSTYPE=\"Linux2.6\"    OSARCH=\"Linux\"  MOZ_DLL_SUFFIX=\".so\"    XP_UNIX=1 _GNU_SOURCE HAVE_VISIBILITY_ATTRIBUTE=1
TEMPLATE_XPCOM_DEFS.l4             = OSTYPE=\"L4ENV\"       OSARCH=\"L4\"     MOZ_DLL_SUFFIX=\".s.so\"  XP_UNIX=1 L4ENV HAVE_VISIBILITY_ATTRIBUTE=1
TEMPLATE_XPCOM_DEFS.os2            = OSTYPE=\"OS/2 4.5\"    OSARCH=\"OS/2\"   MOZ_DLL_SUFFIX=\".dll\"   XP_UNIX=1
TEMPLATE_XPCOM_LDFLAGS.darwin      = $(VBOXR3NP_LDFLAGS.darwin) \
                                     -fshort-wchar -fno-rtti -fno-exceptions -fpascal-strings \
                                     -framework CoreServices -framework CoreFoundation -framework Foundation -framework AppKit -framework Carbon
ifeq ($(filter os2 win,$(BUILD_TARGET)),)
 TEMPLATE_XPCOM_CXXFLAGS          += -fPIC
 TEMPLATE_XPCOM_CFLAGS            += -fPIC
 TEMPLATE_XPCOM_LDFLAGS           += -fPIC
 TEMPLATE_XPCOM_DEFS              += MOZ_PRESERVE_PIC
endif
TEMPLATE_XPCOM_INCS                = $(PATH_TARGET) \
                                     xpcom/build \
                                     xpcom/ds \
                                     xpcom/io \
                                     xpcom/base \
                                     xpcom/components \
                                     xpcom/threads \
                                     xpcom/proxy/src \
                                     xpcom/reflect/xptcall/src \
                                     ipc/ipcd/client/src \
                                     ipc/ipcd/shared/src \
                                     ipc/ipcd/extensions/lock/src \
                                     ipc/ipcd/extensions/transmngr/src \
                                     ipc/ipcd/extensions/dconnect/src \
                                     ipc/ipcd/extensions/transmngr/common \
                                     $(VBOX_PATH_SDK)/include \
                                     $(VBOX_PATH_SDK)/include/xpcom \
                                     $(VBOX_PATH_SDK)/include/xpcom/nsprpub \
                                     $(VBOX_PATH_SDK)/include/xpcom/string \
                                     $(VBOX_PATH_SDK)/include/xpcom/xpcom \
                                     $(VBOX_PATH_SDK)/include/xpcom/ipcd
TEMPLATE_XPCOM_INCS.darwin         = /Developer/SDKs/MacOSX10.4u.sdk/Developer/Headers/FlatCarbon
TEMPLATE_XPCOM_INCS.l4             = $(L4_INCDIR) $(VBOX_L4_GCC3_INCS)
TEMPLATE_XPCOM_LDFLAGS.l4          = $(L4_DIR)/lib/x86_586/crt0.o \
                                     -T$(L4_DIR)/lib/x86_586/main_rel.ld -nostdlib \
                                     # -Wl,--whole-archive,--no-allow-shlib-undefined
TEMPLATE_XPCOM_LIBS.l4             = $(VBOX_GCC_LIBGCC)
TEMPLATE_XPCOM_ORDERDEPS           = $(foreach hdrinst, $(filter %-HEADERS, $(INSTALLS)), $(TARGET_$(hdrinst))) \
                                     $(PATH_VBox-xpcom-string)/idl_ts


#
# Template for building the XPCOM executables
#
TEMPLATE_XPCOMEXE                  = XPCOM executable files (testcases)
TEMPLATE_XPCOMEXE_EXTENDS          = XPCOM
## @todo undo -fPIC.
TEMPLATE_XPCOMEXE_INCS             = $(PATH_TARGET) \
                                     ipc/ipcd/shared/src \
                                     $(VBOX_PATH_SDK)/include \
                                     $(VBOX_PATH_SDK)/include/xpcom \
                                     $(VBOX_PATH_SDK)/include/xpcom/nsprpub \
                                     $(VBOX_PATH_SDK)/include/xpcom/string \
                                     $(VBOX_PATH_SDK)/include/xpcom/xpcom \
                                     $(VBOX_PATH_SDK)/include/xpcom/ipcd
TEMPLATE_XPCOMEXE_LIBS             = \
	$(TARGET_VBox-xpcom-ipcshared) \
	$(TARGET_VBoxXPCOM)
TEMPLATE_XPCOMEXE_LIBS.linux       = dl $(LIB_PTHREAD)
TEMPLATE_XPCOMEXE_LIBS.l4          = $(LIB_RUNTIME) $(VBOX_GCC_LIBGCC)
TEMPLATE_XPCOMEXE_LDFLAGS.darwin   = -bind_at_load $(TEMPLATE_XPCOM_LDFLAGS.darwin)
TEMPLATE_XPCOMEXE_LDFLAGS.l4       = $(L4_DIR)/lib/x86_586/crt0.o \
    -T$(L4_DIR)/lib/x86_586/main_dyn.ld -nostdlib -lgcc \
    -Wl,--export-dynamic,--dynamic-linker=libld-l4.s.so \
    -Wl,--rpath-link,$(L4_LIBDIR) \
    # -Wl,--whole-archive,--no-allow-shlib-undefined

#
# Template for building XPCOM executables for running at build time.
#
# It extends the BLDPROG template in config.kmk but overrides CFLAGS
# and CXXFLAGS completely at the moment.
#
TEMPLATE_XPCOMBLDPROG                   = XPCOM Build programs executables
TEMPLATE_XPCOMBLDPROG_EXTENDS           = BLDPROG

TEMPLATE_XPCOMBLDPROG_DEFS                      = $(TEMPLATE_BLDPROG_DEFS)                      $(TEMPLATE_XPCOMEXE_DEFS)
TEMPLATE_XPCOMBLDPROG_DEFS.$(BUILD_TARGET)      = $(TEMPLATE_BLDPROG_DEFS.$(BUILD_TARGET))      $(TEMPLATE_XPCOMEXE_DEFS.$(BUILD_TARGET))
TEMPLATE_XPCOMBLDPROG_DEFS.$(BUILD_TARGET_ARCH) = $(TEMPLATE_BLDPROG_DEFS.$(BUILD_TARGET_ARCH)) $(TEMPLATE_XPCOMEXE_DEFS.$(BUILD_TARGET_ARCH))
TEMPLATE_XPCOMBLDPROG_CXXFLAGS          = -ansi -Wall -Wno-non-virtual-dtor
TEMPLATE_XPCOMBLDPROG_CXXFLAGS.linux    = -pthread
TEMPLATE_XPCOMBLDPROG_CXXFLAGS.release  = -O
TEMPLATE_XPCOMBLDPROG_CXXFLAGS.profile  = -O
TEMPLATE_XPCOMBLDPROG_CFLAGS            = -pipe -ansi -Wall -Wno-unused
TEMPLATE_XPCOMBLDPROG_CFLAGS.linux      = -pthread
TEMPLATE_XPCOMBLDPROG_CFLAGS.release    = -O
TEMPLATE_XPCOMBLDPROG_CFLAGS.profile    = -O
TEMPLATE_XPCOMBLDPROG_INCS              = $(VBOX_PATH_SDK)/include \
                                          $(VBOX_PATH_SDK)/include/xpcom \
                                          $(VBOX_PATH_SDK)/include/xpcom/nsprpub \
                                          $(VBOX_PATH_SDK)/include/xpcom/string \
                                          $(VBOX_PATH_SDK)/include/xpcom/xpcom \
                                          $(VBOX_PATH_SDK)/include/xpcom/ipcd
TEMPLATE_XPCOMBLDPROG_ORDERDEPS         = $(foreach hdrinst, $(filter %-HEADERS, $(INSTALLS)), $(TARGET_$(hdrinst)))


#
# Header installs.
#
INSTALLS = \
	NSPRPUB-HEADERS \
	NSPRPUB-MD-HEADERS \
	NSPRPUB-OBS-HEADERS \
	NSPRPUB-PRIV-HEADERS \
	STRING-HEADERS \
	XPCOM-HEADERS \
	IPCD-HEADERS

#
# The IDL compiler and typelib linker.
#
BLDPROGS = \
	xpidl \
	xpt_link

#
# We build several libraries so that any linker command line
# length restrictions limit will be avoided. (Solaris, Mac?)
#
LIBRARIES = \
	VBox-xpcom-nspr \
	VBox-xpcom-typelib \
	VBox-xpcom-string \
	VBox-xpcom-base \
	VBox-xpcom-ds \
	VBox-xpcom-io \
	VBox-xpcom-components \
	VBox-xpcom-threads \
	VBox-xpcom-xptinfo \
	VBox-xpcom-xptcall \
	VBox-xpcom-proxy \
	VBoxXPCOMGlue \
	VBox-xpcom-ipcutils \
	VBox-xpcom-ipcshared \
	VBox-xpcom-ipcdlock \
	VBox-xpcom-ipctransmgr \
	VBox-xcpom-ipctmgrcom

DLLS = \
	VBoxXPCOM \
	VBoxXPCOMIPCC

ifdef VBOX_WITH_TESTCASES
PROGRAMS = \
	tstnsIFileEnumerator \
	tstnsIFileTest \
	tstTestArray \
	tstTestAtoms \
	tstTestAutoLock \
	tstTestCallTemplates \
	tstTestCOMPtr \
	tstTestCOMPtrEq \
	tstTestCRT \
	tstTestFactory \
	tstTestHashtables \
	tstTestID \
	tstTestObserverService \
	tstTestPipes \
	tstTestServMgr \
	tstTestThreads \
	tstTestXPIDLString \
	tstTestDeque \
	tstTestAutoPtr \
	tstTestMinStringAPI \
	tstTestStrings \
	tstPrimitiveTest \
	tstSimpleTypeLib \
	tstXptDump \
	tstXptLink
#   tstTestPermanentAtoms
endif # VBOX_WITH_TESTCASES
PROGRAMS += VBoxXPCOMIPCD

ifeq ($(BUILD_TARGET),linux)
 XPCOM_TYPELIB = $(PATH_BIN)/VBoxXPCOMBase.xpt
else
 XPCOM_TYPELIB = $(PATH_BIN)/components/VBoxXPCOMBase.xpt
endif
OTHERS = $(XPCOM_TYPELIB)
OTHER_CLEAN = \
	$(PATH_TARGET)/VBox-xpcom-nspr/_pr_bld.h \
	$(PATH_TARGET)/VBox-xpcom-nspr/_pl_bld.h \
	$(XPCOM_TYPELIB)



#
# SDK headers - lot's of files to install...
#
# Tip: If you are going to remove files here, you might
#      wish to do a `kmk uninstall' first to avoid have
#      obsoleted files in the $(INST_SDK) directory.
#

NSPRPUB-HEADERS_INST = $(INST_SDK)/include/xpcom/nsprpub/
NSPRPUB-HEADERS_IFFLAGS = -m 644
NSPRPUB-HEADERS_SOURCES = \
	nsprpub/pr/include/nspr.h \
	nsprpub/lib/ds/plarena.h \
	nsprpub/lib/ds/plarenas.h \
	nsprpub/lib/libc/include/plbase64.h \
	nsprpub/lib/libc/include/plerror.h \
	nsprpub/lib/libc/include/plgetopt.h \
	nsprpub/lib/ds/plhash.h \
	nsprpub/lib/libc/include/plresolv.h \
	nsprpub/lib/libc/include/plstr.h \
	nsprpub/pr/include/pratom.h \
	nsprpub/pr/include/prbit.h \
	nsprpub/pr/include/prclist.h \
	nsprpub/pr/include/prcmon.h \
	nsprpub/pr/include/prcountr.h \
	nsprpub/pr/include/prcvar.h \
	nsprpub/pr/include/prdtoa.h \
	nsprpub/pr/include/prenv.h \
	nsprpub/pr/include/prerr.h \
	nsprpub/pr/include/prerror.h \
	nsprpub/pr/include/prinet.h \
	nsprpub/pr/include/prinit.h \
	nsprpub/pr/include/prinrval.h \
	nsprpub/pr/include/prio.h \
	nsprpub/pr/include/pripcsem.h \
	nsprpub/pr/include/prlink.h \
	nsprpub/pr/include/prlock.h \
	nsprpub/pr/include/prlog.h \
	nsprpub/pr/include/prlong.h \
	nsprpub/pr/include/prmem.h \
	nsprpub/pr/include/prmon.h \
	nsprpub/pr/include/prmwait.h \
	nsprpub/pr/include/prnetdb.h \
	nsprpub/pr/include/prolock.h \
	nsprpub/pr/include/prpdce.h \
	nsprpub/pr/include/prprf.h \
	nsprpub/pr/include/prproces.h \
	nsprpub/pr/include/prrng.h \
	nsprpub/pr/include/prrwlock.h \
	nsprpub/pr/include/prshm.h \
	nsprpub/pr/include/prshma.h \
	nsprpub/pr/include/prsystem.h \
	nsprpub/pr/include/prthread.h \
	nsprpub/pr/include/prtime.h \
	nsprpub/pr/include/prtpool.h \
	nsprpub/pr/include/prtrace.h \
	nsprpub/pr/include/prtypes.h \
	nsprpub/pr/include/prvrsion.h \
	nsprpub/pr/include/prwin16.h \
	nsprpub/pr/include/md/_vbox.cfg=>prcpucfg.h \

NSPRPUB-MD-HEADERS_INST = $(INST_SDK)/include/xpcom/nsprpub/md
NSPRPUB-MD-HEADERS_IFFLAGS = -m 644
NSPRPUB-MD-HEADERS_SOURCES = \
	nsprpub/pr/include/md/_darwin.h \
	nsprpub/pr/include/md/_freebsd.h \
	nsprpub/pr/include/md/_l4v2.h \
	nsprpub/pr/include/md/_linux.h \
	nsprpub/pr/include/md/_macos.h \
	nsprpub/pr/include/md/_netbsd.h \
	nsprpub/pr/include/md/_openbsd.h \
	nsprpub/pr/include/md/_os2.h \
	nsprpub/pr/include/md/_solaris.h \
	nsprpub/pr/include/md/_unix_errors.h \
	nsprpub/pr/include/md/_unixos.h \
	nsprpub/pr/include/md/_pth.h \
	nsprpub/pr/include/md/prosdep.h \
	\
	nsprpub/pr/include/md/_freebsd.cfg \
	nsprpub/pr/include/md/_linux.cfg \
	nsprpub/pr/include/md/_darwin.cfg \
	nsprpub/pr/include/md/_netbsd.cfg \
	nsprpub/pr/include/md/_openbsd.cfg \
	nsprpub/pr/include/md/_os2.cfg \
	nsprpub/pr/include/md/_solaris32.cfg \
	nsprpub/pr/include/md/_solaris64.cfg \
	nsprpub/pr/include/md/_l4v2.cfg

NSPRPUB-OBS-HEADERS_INST = $(INST_SDK)/include/xpcom/nsprpub/obsolete
NSPRPUB-OBS-HEADERS_IFFLAGS = -m 644
NSPRPUB-OBS-HEADERS_SOURCES = \
	nsprpub/pr/include/obsolete/pralarm.h \
	nsprpub/pr/include/obsolete/probslet.h \
	nsprpub/pr/include/obsolete/protypes.h \
	nsprpub/pr/include/obsolete/prsem.h

NSPRPUB-PRIV-HEADERS_INST = $(INST_SDK)/include/xpcom/nsprpub/private
NSPRPUB-PRIV-HEADERS_IFFLAGS = -m 644
NSPRPUB-PRIV-HEADERS_SOURCES = \
	nsprpub/pr/include/private/pprio.h \
	nsprpub/pr/include/private/pprthred.h \
	nsprpub/pr/include/private/prpriv.h

STRING-HEADERS_INST = $(INST_SDK)/include/xpcom/string
STRING-HEADERS_IFFLAGS = -m 644
STRING-HEADERS_SOURCES = \
	xpcom/string/public/nsAString.h \
	xpcom/string/public/nsAlgorithm.h \
	xpcom/string/public/nsCharTraits.h \
	xpcom/string/public/nsDependentString.h \
	xpcom/string/public/nsDependentSubstring.h \
	xpcom/string/public/nsEmbedString.h \
	xpcom/string/public/nsLiteralString.h \
	xpcom/string/public/nsObsoleteAString.h \
	xpcom/string/public/nsPrintfCString.h \
	xpcom/string/public/nsPromiseFlatString.h \
	xpcom/string/public/nsReadableUtils.h \
	xpcom/string/public/nsString.h \
	xpcom/string/public/nsStringAPI.h \
	xpcom/string/public/nsStringFwd.h \
	xpcom/string/public/nsStringIterator.h \
	xpcom/string/public/nsSubstring.h \
	xpcom/string/public/nsSubstringTuple.h \
	xpcom/string/public/nsTAString.h \
	xpcom/string/public/nsTDependentString.h \
	xpcom/string/public/nsTDependentSubstring.h \
	xpcom/string/public/nsTObsoleteAString.h \
	xpcom/string/public/nsTPromiseFlatString.h \
	xpcom/string/public/nsTString.h \
	xpcom/string/public/nsTSubstring.h \
	xpcom/string/public/nsTSubstringTuple.h \
	xpcom/string/public/nsUTF8Utils.h \
	xpcom/string/public/nsXPIDLString.h \
	xpcom/string/public/string-template-def-char.h \
	xpcom/string/public/string-template-def-unichar.h \
	xpcom/string/public/string-template-undef.h

XPCOM-HEADERS_INST = $(INST_SDK)/include/xpcom/xpcom
XPCOM-HEADERS_IFFLAGS = -m 644
XPCOM-HEADERS_SOURCES = \
	xpcom/base/nsAgg.h \
	xpcom/io/nsAppDirectoryServiceDefs.h \
	xpcom/ds/nsArray.h \
	xpcom/ds/nsArrayEnumerator.h \
	xpcom/ds/nsAtomService.h \
	xpcom/ds/nsAutoBuffer.h \
	xpcom/threads/nsAutoLock.h \
	xpcom/base/nsAutoPtr.h \
	xpcom/ds/nsBaseHashtable.h \
	xpcom/ds/nsCOMArray.h \
	xpcom/glue/nsCOMPtr.h \
	xpcom/ds/nsCRT.h \
	xpcom/components/nsCategoryManagerUtils.h \
	xpcom/ds/nsCheapSets.h \
	xpcom/ds/nsClassHashtable.h \
	xpcom/base/nsCom.h \
	xpcom/components/nsComponentManagerObsolete.h \
	xpcom/components/nsComponentManagerUtils.h \
	xpcom/ds/nsCppSharedAllocator.h \
	xpcom/ds/nsDataHashtable.h \
	xpcom/glue/nsDebug.h \
	xpcom/base/nsDebugImpl.h \
	xpcom/ds/nsDeque.h \
	xpcom/io/nsDirectoryService.h \
	xpcom/io/nsDirectoryServiceDefs.h \
	xpcom/io/nsDirectoryServiceUtils.h \
	xpcom/ds/nsDoubleHashtable.h \
	xpcom/ds/nsEnumeratorUtils.h \
	xpcom/base/nsError.h \
	xpcom/io/nsEscape.h \
	xpcom/threads/nsEventQueueUtils.h \
	xpcom/io/nsFastLoadPtr.h \
	xpcom/io/nsFastLoadService.h \
	xpcom/ds/nsFixedSizeAllocator.h \
	xpcom/glue/nsGenericFactory.h \
	xpcom/ds/nsHashKeys.h \
	xpcom/ds/nsHashSets.h \
	xpcom/ds/nsHashtable.h \
	xpcom/base/nsIAllocator.h \
	xpcom/ds/nsIByteBuffer.h \
	xpcom/base/nsID.h \
	xpcom/glue/nsIGenericFactory.h \
	xpcom/base/nsIID.h \
	xpcom/glue/nsIInterfaceRequestorUtils.h \
	xpcom/components/nsIServiceManagerObsolete.h \
	xpcom/components/nsIServiceManagerUtils.h \
	xpcom/base/nsISupportsBase.h \
	xpcom/glue/nsISupportsImpl.h \
	xpcom/base/nsISupportsObsolete.h \
	xpcom/glue/nsISupportsUtils.h \
	xpcom/ds/nsIUnicharBuffer.h \
	xpcom/io/nsIUnicharInputStream.h \
	xpcom/glue/nsIWeakReferenceUtils.h \
	xpcom/ds/nsInt64.h \
	xpcom/ds/nsInterfaceHashtable.h \
	xpcom/io/nsLinebreakConverter.h \
	xpcom/io/nsLocalFile.h \
	xpcom/io/nsLocalFileUnix.h \
	xpcom/io/nsLocalFileOS2.h \
	xpcom/io/nsLocalFileOSX.h \
	xpcom/glue/nsMemory.h \
	xpcom/components/nsModule.h \
	xpcom/io/nsMultiplexInputStream.h \
	xpcom/io/nsNativeCharsetUtils.h \
	xpcom/components/nsNativeComponentLoader.h \
	xpcom/ds/nsObserverService.h \
	xpcom/components/nsObsoleteModuleLoading.h \
	xpcom/threads/nsProcess.h \
	xpcom/proxy/public/nsProxiedService.h \
	xpcom/proxy/public/nsProxyEvent.h \
	xpcom/proxy/public/nsProxyRelease.h \
	xpcom/ds/nsQuickSort.h \
	xpcom/ds/nsRecyclingAllocator.h \
	xpcom/ds/nsRefPtrHashtable.h \
	xpcom/io/nsScriptableInputStream.h \
	xpcom/ds/nsStaticAtom.h \
	xpcom/components/nsStaticComponent.h \
	xpcom/ds/nsStaticNameTable.h \
	xpcom/io/nsStorageStream.h \
	xpcom/io/nsStreamUtils.h \
	xpcom/ds/nsStringEnumerator.h \
	xpcom/io/nsStringIO.h \
	xpcom/io/nsStringStream.h \
	xpcom/ds/nsSupportsArray.h \
	xpcom/ds/nsSupportsPrimitives.h \
	xpcom/ds/nsTHashtable.h \
	xpcom/ds/nsTextFormatter.h \
	xpcom/ds/nsTime.h \
	xpcom/glue/nsTraceRefcnt.h \
	xpcom/base/nsTraceRefcntImpl.h \
	xpcom/ds/nsUnitConversion.h \
	xpcom/ds/nsValueArray.h \
	xpcom/ds/nsVariant.h \
	xpcom/ds/nsVoidArray.h \
	xpcom/base/nsWeakPtr.h \
	xpcom/glue/nsWeakReference.h \
	xpcom/build/nsXPCOM.h \
	xpcom/build/nsXPCOMCID.h \
	xpcom/glue/standalone/nsXPCOMGlue.h \
	xpcom/base/nscore.h \
	xpcom/ds/pldhash.h \
	xpcom/threads/plevent.h \
	xpcom/components/xcDll.h \
	xpcom/typelib/xpt/public/xpt_arena.h \
	xpcom/typelib/xpt/public/xpt_struct.h \
	xpcom/typelib/xpt/public/xpt_xdr.h \
	xpcom/reflect/xptcall/public/xptcall.h \
	xpcom/reflect/xptcall/public/xptcstubsdecl.inc \
	xpcom/reflect/xptcall/public/xptcstubsdef.inc \
	xpcom/reflect/xptinfo/public/xptinfo.h \
	xpcom-config.h

IPCD-HEADERS_INST = $(INST_SDK)/include/xpcom/ipcd
IPCD-HEADERS_IFFLAGS = -m 644
IPCD-HEADERS_SOURCES = \
	ipc/ipcd/client/public/ipcCID.h \
	ipc/ipcd/extensions/lock/public/ipcLockCID.h \
	ipc/ipcd/util/public/ipcMessageReader.h \
	ipc/ipcd/util/public/ipcMessageWriter.h \
	ipc/ipcd/daemon/public/ipcModule.h \
	ipc/ipcd/daemon/public/ipcModuleUtil.h \
	ipc/ipcd/client/public/ipcdclient.h


#
# The IDL compiler.
#
# We build it statically because we cannot rely on additional .a files
# like in the original build
#
xpidl_TEMPLATE = XPCOMBLDPROG
xpidl_DEFS = EXPORT_XPT_API
## @todo This assumes HOST == TARGET.
xpidl_INST = $(INST_SDK)/bin/
xpidl_SOURCES = \
	xpcom/typelib/xpidl/xpidl.c \
	xpcom/typelib/xpidl/xpidl_idl.c \
	xpcom/typelib/xpidl/xpidl_util.c \
	xpcom/typelib/xpidl/xpidl_header.c \
	xpcom/typelib/xpidl/xpidl_typelib.c \
	xpcom/typelib/xpidl/xpidl_doc.c \
	xpcom/typelib/xpidl/xpidl_java.c \
	xpcom/typelib/xpt/src/xpt_arena.c \
	xpcom/typelib/xpt/src/xpt_struct.c \
	xpcom/typelib/xpt/src/xpt_xdr.c

# We do these ONCE.
libIDL_config_cflags := $(shell $(VBOX_LIBIDL_CONFIG) --cflags)
libIDL_config_libs   := $(shell $(VBOX_LIBIDL_CONFIG) --libs)
xpidl_CFLAGS = \
	$(libIDL_config_cflags)
xpidl_LDFLAGS = \
	$(libIDL_config_libs)

#
# The XPT linker.
#
xpt_link_TEMPLATE = XPCOMBLDPROG
xpt_link_SOURCES = \
	xpcom/typelib/xpt/tools/xpt_link.c \
	xpcom/typelib/xpt/src/xpt_arena.c \
	xpcom/typelib/xpt/src/xpt_struct.c \
	xpcom/typelib/xpt/src/xpt_xdr.c


#
# The NSPR Library.
#
VBox-xpcom-nspr_TEMPLATE   = XPCOM
VBox-xpcom-nspr_NOINST     = 1
VBox-xpcom-nspr_DEFS       = \
	_NSPR_BUILD_ \
	HAVE_LCHOWN=1 \
	HAVE_STRERROR=1 \
	FORCE_PR_LOG
VBox-xpcom-nspr_DEFS.darwin = \
	HAVE_BSD_FLOCK=1 \
	_PR_PTHREADS
VBox-xpcom-nspr_DEFS.freebsd = \
	HAVE_CVAR_BUILT_ON_SEM \
	_PR_PTHREADS
# FIXME: LINUX should be defined by _linux.cfg
VBox-xpcom-nspr_DEFS.linux = \
	LINUX=1 \
	_POSIX_SOURCE=1 \
	_BSD_SOURCE=1 \
	_SVID_SOURCE=1 \
	_REENTRANT=1 \
	_LARGEFILE64_SOURCE=1 \
	HAVE_FCNTL_FILE_LOCKING=1 \
	HAVE_CVAR_BUILT_ON_SEM \
	_PR_PTHREADS
# _BSD_SOURCE is here to keep the Glibc header files happy and make them include the right things
# FIXME: L4 should be defined by _linux.cfg
VBox-xpcom-nspr_DEFS.l4 = \
	L4=1 \
	_REENTRANT=1 \
	_LARGEFILE64_SOURCE=1 \
	_POSIX_SOURCE=1 \
	_BSD_SOURCE=1 \
	HAVE_FCNTL_FILE_LOCKING=1 \
	HAVE_CVAR_BUILT_ON_SEM
VBox-xpcom-nspr_DEFS.netbsd = \
	_PR_PTHREADS
VBox-xpcom-nspr_DEFS.openbsd = \
	_PR_PTHREADS
VBox-xpcom-nspr_DEFS.os2 =
VBox-xpcom-nspr_DEFS.solaris = \
	_PR_PTHREADS
VBox-xpcom-nspr_INCS = \
	nsprpub/pr/include/private \
	$(PATH_TARGET)/VBox-xpcom-nspr

VBox-xpcom-nspr_SOURCES  = \
	nsprpub/pr/src/io/prfdcach.c \
	nsprpub/pr/src/io/prmwait.c \
	nsprpub/pr/src/io/priometh.c \
	nsprpub/pr/src/io/pripv6.c \
	nsprpub/pr/src/io/prmapopt.c \
	nsprpub/pr/src/io/prlayer.c \
	nsprpub/pr/src/io/prlog.c \
	nsprpub/pr/src/io/prmmap.c \
	nsprpub/pr/src/io/prpolevt.c \
	nsprpub/pr/src/io/prprf.c \
	nsprpub/pr/src/io/prscanf.c \
	nsprpub/pr/src/io/prstdio.c \
	nsprpub/pr/src/linking/prlink.c \
	nsprpub/pr/src/malloc/prmalloc.c \
	nsprpub/pr/src/malloc/prmem.c \
	nsprpub/pr/src/md/prosdep.c \
	nsprpub/pr/src/memory/prseg.c \
	nsprpub/pr/src/memory/prshm.c \
	nsprpub/pr/src/memory/prshma.c \
	nsprpub/pr/src/misc/pralarm.c \
	nsprpub/pr/src/misc/pratom.c \
	nsprpub/pr/src/misc/prcountr.c \
	nsprpub/pr/src/misc/prdtoa.c \
	nsprpub/pr/src/misc/prenv.c \
	nsprpub/pr/src/misc/prerr.c \
	nsprpub/pr/src/misc/prerror.c \
	nsprpub/pr/src/misc/prerrortable.c \
	nsprpub/pr/src/misc/prinit.c \
	nsprpub/pr/src/misc/prinrval.c \
	nsprpub/pr/src/misc/pripc.c \
	nsprpub/pr/src/misc/prlog2.c \
	nsprpub/pr/src/misc/prlong.c \
	nsprpub/pr/src/misc/prnetdb.c \
	nsprpub/pr/src/misc/prolock.c \
	nsprpub/pr/src/misc/prrng.c \
	nsprpub/pr/src/misc/prsystem.c \
	nsprpub/pr/src/misc/prtime.c \
	nsprpub/pr/src/misc/prthinfo.c \
	nsprpub/pr/src/misc/prtpool.c \
	nsprpub/pr/src/misc/prtrace.c \
	nsprpub/pr/src/threads/prcmon.c \
	nsprpub/pr/src/threads/prrwlock.c \
	nsprpub/pr/src/threads/prtpd.c \
	nsprpub/pr/src/prvrsion.c \
	nsprpub/lib/ds/plarena.c \
	nsprpub/lib/ds/plhash.c \
	nsprpub/lib/libc/src/strlen.c \
	nsprpub/lib/libc/src/strcpy.c \
	nsprpub/lib/libc/src/strdup.c \
	nsprpub/lib/libc/src/strcat.c \
	nsprpub/lib/libc/src/strcmp.c \
	nsprpub/lib/libc/src/strccmp.c \
	nsprpub/lib/libc/src/strchr.c \
	nsprpub/lib/libc/src/strpbrk.c \
	nsprpub/lib/libc/src/strstr.c \
	nsprpub/lib/libc/src/strcstr.c \
	nsprpub/lib/libc/src/strtok.c \
	nsprpub/lib/libc/src/base64.c \
	nsprpub/lib/libc/src/plerror.c \
	nsprpub/lib/libc/src/plgetopt.c

VBox-xpcom-nspr_SOURCES.darwin  = \
	nsprpub/pr/src/md/unix/unix.c \
	nsprpub/pr/src/md/unix/unix_errors.c \
	nsprpub/pr/src/md/unix/uxproces.c \
	nsprpub/pr/src/md/unix/uxrng.c \
	nsprpub/pr/src/md/unix/uxshm.c \
	nsprpub/pr/src/md/unix/uxwrap.c \
	nsprpub/pr/src/md/unix/darwin.c \
	nsprpub/pr/src/pthreads/ptio.c \
	nsprpub/pr/src/pthreads/ptsynch.c \
	nsprpub/pr/src/pthreads/ptthread.c \
	nsprpub/pr/src/pthreads/ptmisc.c
VBox-xpcom-nspr_SOURCES.darwin.x86 = nsprpub/pr/src/md/unix/os_Darwin_x86.s

VBox-xpcom-nspr_SOURCES.l4  = \
	nsprpub/pr/src/io/prfile.c /* why not for Linux? */ \
	nsprpub/pr/src/io/prio.c   /*  ""   ""  ""   ""  */ \
	nsprpub/pr/src/io/prsocket.c \
	nsprpub/pr/src/md/unix/unix.c \
	nsprpub/pr/src/md/unix/unix_errors.c \
	nsprpub/pr/src/md/unix/uxpoll.c \
	nsprpub/pr/src/md/unix/uxproces.c \
	nsprpub/pr/src/md/unix/uxrng.c \
	nsprpub/pr/src/md/unix/uxshm.c \
	nsprpub/pr/src/md/unix/uxwrap.c \
	nsprpub/pr/src/md/unix/l4env.c \
	nsprpub/pr/src/threads/prcthr.c \
	nsprpub/pr/src/threads/prmon.c \
	nsprpub/pr/src/threads/combined/prucpu.c \
	nsprpub/pr/src/threads/combined/prucv.c \
	nsprpub/pr/src/threads/combined/prulock.c \
	nsprpub/pr/src/threads/combined/prustack.c \
	nsprpub/pr/src/threads/combined/pruthr.c
#   nsprpub/pr/src/md/l4env/prnetdb.c \
#   nsprpub/pr/src/md/l4env/threads.c
VBox-xpcom-nspr_SOURCES.l4.x86 = nsprpub/pr/src/md/unix/os_Linux_x86.s
VBox-xpcom-nspr_SOURCES.l4.amd64 = nsprpub/pr/src/md/unix/os_Linux_x86_64.s

VBox-xpcom-nspr_SOURCES.linux  = \
	nsprpub/pr/src/md/unix/unix.c \
	nsprpub/pr/src/md/unix/unix_errors.c \
	nsprpub/pr/src/md/unix/uxproces.c \
	nsprpub/pr/src/md/unix/uxrng.c \
	nsprpub/pr/src/md/unix/uxshm.c \
	nsprpub/pr/src/md/unix/uxwrap.c \
	nsprpub/pr/src/md/unix/linux.c \
	nsprpub/pr/src/pthreads/ptio.c \
	nsprpub/pr/src/pthreads/ptsynch.c \
	nsprpub/pr/src/pthreads/ptthread.c \
	nsprpub/pr/src/pthreads/ptmisc.c
VBox-xpcom-nspr_SOURCES.linux.x86 = nsprpub/pr/src/md/unix/os_Linux_x86.s
VBox-xpcom-nspr_SOURCES.linux.amd64 = nsprpub/pr/src/md/unix/os_Linux_x86_64.s


nsprpub/pr/src/prvrsion.c_DEPS = $(PATH_VBox-xpcom-nspr)/_pr_bld.h
nsprpub/lib/ds/plvrsion.c_DEPS = $(PATH_VBox-xpcom-nspr)/_pl_bld.h


VBox-xpcom-typelib_TEMPLATE = XPCOM
VBox-xpcom-typelib_NOINST   = 1
VBox-xpcom-typelib_SOURCES = \
	xpcom/typelib/xpt/src/xpt_arena.c \
	xpcom/typelib/xpt/src/xpt_struct.c \
	xpcom/typelib/xpt/src/xpt_xdr.c

VBox-xpcom-string_TEMPLATE = XPCOM
VBox-xpcom-string_NOINST = 1
VBox-xpcom-string_SOURCES = \
	xpcom/string/src/nsAString.cpp \
	xpcom/string/src/nsDependentSubstring.cpp \
	xpcom/string/src/nsObsoleteAStringThunk.cpp \
	xpcom/string/src/nsPrintfCString.cpp \
	xpcom/string/src/nsPromiseFlatString.cpp \
	xpcom/string/src/nsReadableUtils.cpp \
	xpcom/string/src/nsSubstring.cpp \
	xpcom/string/src/nsSubstringTuple.cpp \
	xpcom/string/src/nsString.cpp \
	xpcom/string/src/nsStringComparator.cpp \
	xpcom/string/src/nsStringObsolete.cpp

VBox-xpcom-base_TEMPLATE = XPCOM
VBox-xpcom-base_NOINST = 1
VBox-xpcom-base_SOURCES = \
	xpcom/base/nsAllocator.cpp \
	xpcom/base/nsConsoleMessage.cpp \
	xpcom/base/nsConsoleService.cpp \
	xpcom/base/nsDebugImpl.cpp \
	xpcom/base/nsErrorService.cpp \
	xpcom/base/nsExceptionService.cpp \
	xpcom/base/nsID.cpp \
	xpcom/base/nsMemoryImpl.cpp \
	xpcom/base/nsTraceRefcntImpl.cpp \
	xpcom/base/nsStackFrameUnix.cpp

VBox-xpcom-ds_TEMPLATE = XPCOM
VBox-xpcom-ds_NOINST = 1
VBox-xpcom-ds_SOURCES = \
	xpcom/ds/pldhash.c \
	xpcom/ds/nsAtomTable.cpp \
	xpcom/ds/nsAtomService.cpp \
	xpcom/ds/nsByteBuffer.cpp \
	xpcom/ds/nsCheapSets.cpp \
	xpcom/ds/nsCRT.cpp \
	xpcom/ds/nsDeque.cpp \
	xpcom/ds/nsEmptyEnumerator.cpp \
	xpcom/ds/nsEnumeratorUtils.cpp \
	xpcom/ds/nsFixedSizeAllocator.cpp \
	xpcom/ds/nsHashSets.cpp \
	xpcom/ds/nsHashtable.cpp \
	xpcom/ds/nsObserverList.cpp \
	xpcom/ds/nsObserverService.cpp \
	xpcom/ds/nsProperties.cpp \
	xpcom/ds/nsPersistentProperties.cpp \
	xpcom/ds/nsQuickSort.cpp \
	xpcom/ds/nsRecyclingAllocator.cpp \
	xpcom/ds/nsStaticNameTable.cpp \
	xpcom/ds/nsStringEnumerator.cpp \
	xpcom/ds/nsSupportsArray.cpp \
	xpcom/ds/nsSupportsArrayEnumerator.cpp \
	xpcom/ds/nsSupportsPrimitives.cpp \
	xpcom/ds/nsTHashtable.cpp \
	xpcom/ds/nsUnicharBuffer.cpp \
	xpcom/ds/nsVariant.cpp \
	xpcom/ds/nsVoidArray.cpp \
	xpcom/ds/nsTextFormatter.cpp \
	xpcom/ds/nsTimelineService.cpp \
	xpcom/ds/nsValueArray.cpp \
	xpcom/ds/nsCOMArray.cpp \
	xpcom/ds/nsArray.cpp \
	xpcom/ds/nsArrayEnumerator.cpp
#   xpcom/ds/nsHashPropertyBag.cpp

# @todo what about MOZ_USER_DIR?
VBox-xpcom-io_TEMPLATE = XPCOM
VBox-xpcom-io_NOINST = 1
VBox-xpcom-io_DEFS = MOZ_USER_DIR=\".mozilla\"
VBox-xpcom-io_INCS.darwin = \
	xpcom/MoreFiles
VBox-xpcom-io_SOURCES = \
	xpcom/io/nsAppFileLocationProvider.cpp \
	xpcom/io/nsBinaryStream.cpp \
	xpcom/io/nsByteArrayInputStream.cpp \
	xpcom/io/nsDirectoryService.cpp \
	xpcom/io/nsEscape.cpp \
	xpcom/io/nsFastLoadFile.cpp \
	xpcom/io/nsFastLoadService.cpp \
	xpcom/io/nsInputStreamTee.cpp \
	xpcom/io/nsLinebreakConverter.cpp \
	xpcom/io/nsLocalFileCommon.cpp \
	xpcom/io/nsMultiplexInputStream.cpp \
	xpcom/io/nsPipe3.cpp \
	xpcom/io/nsStreamUtils.cpp \
	xpcom/io/nsScriptableInputStream.cpp \
	xpcom/io/nsSegmentedBuffer.cpp \
	xpcom/io/SpecialSystemDirectory.cpp \
	xpcom/io/nsStorageStream.cpp \
	xpcom/io/nsStringStream.cpp \
	xpcom/io/nsUnicharInputStream.cpp \
	xpcom/io/nsNativeCharsetUtils.cpp
VBox-xpcom-io_SOURCES.darwin = \
	xpcom/io/nsLocalFileOSX.cpp \
	xpcom/MoreFiles/FSCopyObject.c \
	xpcom/MoreFiles/MoreFilesX.c
VBox-xpcom-io_SOURCES.l4 = \
	xpcom/io/nsLocalFileL4.cpp
ifeq ($(filter-out freebsd linux netbsd openbsd solaris,$(BUILD_TARGET)),)
VBox-xpcom-io_SOURCES += \
	xpcom/io/nsLocalFileUnix.cpp
endif
VBox-xpcom-io_SOURCES.os2 = \
	xpcom/io/nsLocalFileOS2.cpp

VBox-xpcom-components_TEMPLATE = XPCOM
VBox-xpcom-components_NOINST = 1
VBox-xpcom-components_DEFS = EXPORT_XPTI_API
VBox-xpcom-components_SOURCES = \
	xpcom/components/nsCategoryManager.cpp \
	xpcom/components/nsComponentManager.cpp \
	xpcom/components/nsComponentManagerObsolete.cpp \
	xpcom/components/nsNativeComponentLoader.cpp \
	xpcom/components/nsServiceManagerObsolete.cpp \
	xpcom/components/xcDll.cpp \
	xpcom/components/nsStaticComponentLoader.cpp

VBox-xpcom-threads_TEMPLATE = XPCOM
VBox-xpcom-threads_NOINST = 1
VBox-xpcom-threads_SOURCES = \
	xpcom/threads/plevent.c \
	xpcom/threads/nsAutoLock.cpp \
	xpcom/threads/nsEnvironment.cpp \
	xpcom/threads/nsEventQueue.cpp \
	xpcom/threads/nsEventQueueService.cpp \
	xpcom/threads/nsThread.cpp \
	xpcom/threads/nsTimerImpl.cpp \
	xpcom/threads/nsProcessCommon.cpp \
	xpcom/threads/TimerThread.cpp

VBox-xpcom-xptinfo_TEMPLATE = XPCOM
VBox-xpcom-xptinfo_NOINST = 1
VBox-xpcom-xptinfo_DEFS = EXPORT_XPTI_API
VBox-xpcom-xptinfo_SOURCES = \
	xpcom/reflect/xptinfo/src/xptiFile.cpp \
	xpcom/reflect/xptinfo/src/xptiInterfaceInfo.cpp \
	xpcom/reflect/xptinfo/src/xptiInterfaceInfoManager.cpp \
	xpcom/reflect/xptinfo/src/xptiManifest.cpp \
	xpcom/reflect/xptinfo/src/xptiMisc.cpp \
	xpcom/reflect/xptinfo/src/xptiTypelibGuts.cpp \
	xpcom/reflect/xptinfo/src/xptiWorkingSet.cpp \
	xpcom/reflect/xptinfo/src/xptiZipItem.cpp \
	xpcom/reflect/xptinfo/src/xptiZipLoader.cpp


VBox-xpcom-xptcall_TEMPLATE = XPCOM
VBox-xpcom-xptcall_NOINST = 1
VBox-xpcom-xptcall_DEFS                = EXPORT_XPTC_API
VBox-xpcom-xptcall_DEFS.darwin         = KEEP_STACK_16_BYTE_ALIGNED
VBox-xpcom-xptcall_DEFS.l4             = L4
VBox-xpcom-xptcall_SOURCES             = xpcom/reflect/xptcall/src/xptcall.cpp
VBox-xpcom-xptcall_SOURCES.darwin.x86  = xpcom/reflect/xptcall/src/md/unix/xptcinvoke_unixish_x86.cpp \
                                         xpcom/reflect/xptcall/src/md/unix/xptcstubs_unixish_x86.cpp
VBox-xpcom-xptcall_SOURCES.linux.x86   = xpcom/reflect/xptcall/src/md/unix/xptcinvoke_gcc_x86_unix.cpp \
                                         xpcom/reflect/xptcall/src/md/unix/xptcstubs_gcc_x86_unix.cpp
VBox-xpcom-xptcall_SOURCES.linux.amd64 = xpcom/reflect/xptcall/src/md/unix/xptcinvoke_x86_64_linux.cpp \
                                         xpcom/reflect/xptcall/src/md/unix/xptcstubs_x86_64_linux.cpp

VBox-xpcom-proxy_TEMPLATE = XPCOM
VBox-xpcom-proxy_NOINST   = 1
VBox-xpcom-proxy_SOURCES  = xpcom/proxy/src/nsProxyEvent.cpp \
                            xpcom/proxy/src/nsProxyEventClass.cpp \
                            xpcom/proxy/src/nsProxyEventObject.cpp \
                            xpcom/proxy/src/nsProxyObjectManager.cpp \
                            xpcom/proxy/src/nsProxyRelease.cpp

# glue library which all client apps will link with
VBoxXPCOMGlue_TEMPLATE = XPCOM
VBoxXPCOMGlue_DEFS     = XPCOM_GLUE
VBoxXPCOMGlue_SOURCES  = xpcom/glue/nsCOMPtr.cpp \
                         xpcom/glue/nsComponentManagerUtils.cpp \
                         xpcom/glue/nsDebug.cpp \
                         xpcom/glue/nsGenericFactory.cpp \
                         xpcom/glue/nsIInterfaceRequestorUtils.cpp \
                         xpcom/glue/nsMemory.cpp \
                         xpcom/glue/nsTraceRefcnt.cpp \
                         xpcom/glue/nsWeakReference.cpp \
                         xpcom/glue/standalone/nsXPCOMGlue.cpp \
                         xpcom/glue/standalone/nsGREDirServiceProvider.cpp
VBoxXPCOMGlue_INST     = lib/ $(INST_SDK)/lib/


#
# The VBoxXPCOM Shared Object, assembling all lib files.
#
VBoxXPCOM_TEMPLATE = XPCOM
VBoxXPCOM_DEFS = BUILD_DCONNECT="1" _IMPL_NS_COM
VBoxXPCOM_SOURCES = \
	xpcom/glue/nsCOMPtr.cpp \
	xpcom/glue/nsComponentManagerUtils.cpp \
	xpcom/glue/nsDebug.cpp \
	xpcom/glue/nsGenericFactory.cpp \
	xpcom/glue/nsIInterfaceRequestorUtils.cpp \
	xpcom/glue/nsMemory.cpp \
	xpcom/glue/nsTraceRefcnt.cpp \
	xpcom/glue/nsWeakReference.cpp \
	xpcom/build/nsXPComInit.cpp \
	xpcom/build/nsStringAPI.cpp
VBoxXPCOM_SOURCES.darwin = \
	darwindeps.cpp
VBoxXPCOM_LIBS = \
	$(TARGET_VBox-xpcom-typelib) \
	$(TARGET_VBox-xpcom-string) \
	$(TARGET_VBox-xpcom-base) \
	$(TARGET_VBox-xpcom-ds) \
	$(TARGET_VBox-xpcom-io) \
	$(TARGET_VBox-xpcom-components) \
	$(TARGET_VBox-xpcom-threads) \
	$(TARGET_VBox-xpcom-xptinfo) \
	$(TARGET_VBox-xpcom-xptcall) \
	$(TARGET_VBox-xpcom-proxy) \
	$(TARGET_VBox-xpcom-nspr)

VBoxXPCOM_LDFLAGS.linux = -Wl,--whole-archive \
	$(TARGET_VBox-xpcom-typelib) \
	$(TARGET_VBox-xpcom-string) \
	$(TARGET_VBox-xpcom-base) \
	$(TARGET_VBox-xpcom-ds) \
	$(TARGET_VBox-xpcom-io) \
	$(TARGET_VBox-xpcom-components) \
	$(TARGET_VBox-xpcom-threads) \
	$(TARGET_VBox-xpcom-xptinfo) \
	$(TARGET_VBox-xpcom-xptcall) \
	$(TARGET_VBox-xpcom-proxy) \
	$(TARGET_VBox-xpcom-nspr) \
	-Wl,--no-whole-archive
#VBoxXPCOM_LIBS.l4 = $(L4_LIBDIR)/libxpcomstubs.a $(L4_LIBDIR)/../libuc_c++.a \
#    $(VBOX_PATH_L4_GCC3_INSTALL)/libsupc++.a $(VBOX_PATH_L4_GCC3_INSTALL)/libgcc_eh.a
# EF heap
#VBoxXPCOM_LIBS += $(LIB_RUNTIME_EF)
#VBoxXPCOM_LDFLAGS = -Wl,--whole-archive $(VBoxXPCOM_LIBS) -Wl,--no-whole-archive $(LIB_RUNTIME)
VBoxXPCOM_LDFLAGS.darwin = -install_name @executable_path/VBoxXPCOM.dylib

ifdef VBOX_IPC_RELEASE_LOG
IPC_LOGGING = 1
else ifneq ($(BUILD_TYPE),release)
IPC_LOGGING = 1
endif

TEMPLATE_XPCOMIPC                  = XPCOM IPC libraries
TEMPLATE_XPCOMIPC_EXTENDS          = XPCOM
TEMPLATE_XPCOMIPC_DEFS             = $(TEMPLATE_XPCOM_DEFS) BUILD_DCONNECT="1"
ifdef IPC_LOGGING
 TEMPLATE_XPCOMIPC_DEFS           += IN_RING3 IPC_LOGGING
 TEMPLATE_XPCOMIPC_LIBS            = $(TEMPLATE_XPCOM_LIBS) $(LIB_RUNTIME)
endif
TEMPLATE_XPCOMIPC_LIBS.darwin      = $(TARGET_VBoxXPCOM)

TEMPLATE_XPCOMIPCEXE               = XPCOM IPC executables
TEMPLATE_XPCOMIPCEXE_EXTENDS       = XPCOMEXE
TEMPLATE_XPCOMIPCEXE_DEFS          = $(TEMPLATE_XPCOMEXE_DEFS) BUILD_DCONNECT="1"
ifdef IPC_LOGGING
 TEMPLATE_XPCOMIPCEXE_DEFS        += IN_RING3 IPC_LOGGING
 TEMPLATE_XPCOMIPCEXE_LIBS         = $(TEMPLATE_XPCOMEXE_LIBS) $(LIB_RUNTIME)
endif

VBox-xpcom-ipcutils_TEMPLATE = XPCOMIPC
VBox-xpcom-ipcutils_NOINST = 1
VBox-xpcom-ipcutils_SOURCES = \
	ipc/ipcd/util/src/ipcMessageReader.cpp \
	ipc/ipcd/util/src/ipcMessageWriter.cpp

VBox-xpcom-ipcshared_TEMPLATE = XPCOMIPC
VBox-xpcom-ipcshared_NOINST = 1
VBox-xpcom-ipcshared_SOURCES = \
	ipc/ipcd/shared/src/ipcLog.cpp \
	ipc/ipcd/shared/src/ipcConfig.cpp \
	ipc/ipcd/shared/src/ipcMessage.cpp \
	ipc/ipcd/shared/src/ipcMessagePrimitives.cpp \
	ipc/ipcd/shared/src/ipcStringList.cpp \
	ipc/ipcd/shared/src/ipcIDList.cpp \
	ipc/ipcd/shared/src/ipcm.cpp

VBox-xpcom-ipcdlock_TEMPLATE = XPCOMIPC
VBox-xpcom-ipcdlock_NOINST = 1
VBox-xpcom-ipcdlock_SOURCES = \
	ipc/ipcd/extensions/lock/src/ipcLockProtocol.cpp \
	ipc/ipcd/extensions/lock/src/ipcLockService.cpp

VBox-xpcom-ipctransmgr_TEMPLATE = XPCOMIPC
VBox-xpcom-ipctransmgr_NOINST = 1
VBox-xpcom-ipctransmgr_SOURCES = \
	ipc/ipcd/extensions/transmngr/src/tmTransactionService.cpp

VBox-xcpom-ipctmgrcom_TEMPLATE = XPCOMIPC
VBox-xcpom-ipctmgrcom_NOINST = 1
VBox-xcpom-ipctmgrcom_SOURCES = \
	ipc/ipcd/extensions/transmngr/common/tmTransaction.cpp \
	ipc/ipcd/extensions/transmngr/common/tmVector.cpp


# DCONNECT client shared object
VBoxXPCOMIPCC_TEMPLATE = XPCOMIPC
ifneq ($(BUILD_TARGET),linux)
VBoxXPCOMIPCC_INST = $(INST_BIN)components/
endif
VBoxXPCOMIPCC_DEFS = HAVE_DEPENDENT_LIBS
VBoxXPCOMIPCC_SOURCES = \
	ipc/ipcd/client/src/ipcdclient.cpp \
	ipc/ipcd/client/src/ipcService.cpp \
	ipc/ipcd/client/src/ipcModuleFactory.cpp \
	ipc/ipcd/client/src/ipcConnectionUnix.cpp \
	ipc/ipcd/extensions/dconnect/src/ipcDConnectService.cpp
VBoxXPCOMIPCC_LDFLAGS.darwin = -install_name @executable_path/components/VBoxXPCOMIPCC.dylib
VBoxXPCOMIPCC_LIBS = \
	$(TARGET_VBox-xpcom-ipcutils) \
	$(TARGET_VBox-xpcom-ipcshared) \
	$(TARGET_VBox-xpcom-ipcdlock) \
	$(TARGET_VBox-xpcom-ipctransmgr) \
	$(TARGET_VBox-xcpom-ipctmgrcom)
# EF
#VBoxXPCOMIPCC_LIBS += $(LIB_RUNTIME)

# DCONNECT daemon executable
VBoxXPCOMIPCD_TEMPLATE = XPCOMIPCEXE
VBoxXPCOMIPCD_SOURCES = \
	ipc/ipcd/daemon/src/ipcd.cpp \
	ipc/ipcd/daemon/src/ipcClient.cpp \
	ipc/ipcd/daemon/src/ipcModuleReg.cpp \
	ipc/ipcd/daemon/src/ipcCommandModule.cpp \
	ipc/ipcd/daemon/src/ipcdUnix.cpp

#
# testcases
#
tstnsIFileEnumerator_TEMPLATE  = XPCOMEXE
tstnsIFileEnumerator_SOURCES   = xpcom/tests/nsIFileEnumerator.cpp
tstnsIFileTest_TEMPLATE        = XPCOMEXE
tstnsIFileTest_SOURCES         = xpcom/tests/nsIFileTest.cpp
tstTestArray_TEMPLATE          = XPCOMEXE
tstTestArray_SOURCES           = xpcom/tests/TestArray.cpp
tstTestAtoms_TEMPLATE          = XPCOMEXE
tstTestAtoms_SOURCES           = xpcom/tests/TestAtoms.cpp
tstTestAutoLock_TEMPLATE       = XPCOMEXE
tstTestAutoLock_SOURCES        = xpcom/tests/TestAutoLock.cpp
tstTestCallTemplates_TEMPLATE  = XPCOMEXE
tstTestCallTemplates_SOURCES   = xpcom/tests/TestCallTemplates.cpp
tstTestCOMPtr_TEMPLATE         = XPCOMEXE
tstTestCOMPtr_SOURCES          = xpcom/tests/TestCOMPtr.cpp
tstTestCOMPtrEq_TEMPLATE       = XPCOMEXE
tstTestCOMPtrEq_SOURCES        = xpcom/tests/TestCOMPtrEq.cpp
tstTestCRT_TEMPLATE            = XPCOMEXE
tstTestCRT_SOURCES             = xpcom/tests/TestCRT.cpp
tstTestFactory_TEMPLATE        = XPCOMEXE
tstTestFactory_SOURCES         = xpcom/tests/TestFactory.cpp
tstTestHashtables_TEMPLATE     = XPCOMEXE
tstTestHashtables_SOURCES      = xpcom/tests/TestHashtables.cpp
tstTestID_TEMPLATE             = XPCOMEXE
tstTestID_SOURCES              = xpcom/tests/TestID.cpp
tstTestObserverService_TEMPLATE= XPCOMEXE
tstTestObserverService_SOURCES = xpcom/tests/TestObserverService.cpp
tstTestPermanentAtoms_TEMPLATE = XPCOMEXE
tstTestPermanentAtoms_SOURCES  = xpcom/tests/TestPermanentAtoms.cpp
tstTestPipes_TEMPLATE          = XPCOMEXE
tstTestPipes_SOURCES           = xpcom/tests/TestPipes.cpp
tstTestServMgr_TEMPLATE        = XPCOMEXE
tstTestServMgr_SOURCES         = xpcom/tests/TestServMgr.cpp
tstTestServMgr_INCS            = xpcom/tests/services
tstTestThreads_TEMPLATE        = XPCOMEXE
tstTestThreads_SOURCES         = xpcom/tests/TestThreads.cpp
tstTestXPIDLString_TEMPLATE    = XPCOMEXE
tstTestXPIDLString_SOURCES     = xpcom/tests/TestXPIDLString.cpp
tstTestDeque_TEMPLATE          = XPCOMEXE
tstTestDeque_SOURCES           = xpcom/tests/TestDeque.cpp
tstTestAutoPtr_TEMPLATE        = XPCOMEXE
tstTestAutoPtr_SOURCES         = xpcom/tests/TestAutoPtr.cpp
tstTestMinStringAPI_TEMPLATE   = XPCOMEXE
tstTestMinStringAPI_SOURCES    = xpcom/tests/TestMinStringAPI.cpp
tstTestStrings_TEMPLATE        = XPCOMEXE
tstTestStrings_SOURCES         = xpcom/tests/TestStrings.cpp
tstPrimitiveTest_TEMPLATE      = XPCOMEXE
tstPrimitiveTest_SOURCES       = xpcom/typelib/xpt/tests/PrimitiveTest.c
tstSimpleTypeLib_TEMPLATE      = XPCOMEXE
tstSimpleTypeLib_SOURCES       = xpcom/typelib/xpt/tests/SimpleTypeLib.c
tstXptDump_TEMPLATE            = XPCOMEXE
tstXptDump_SOURCES             = xpcom/typelib/xpt/tools/xpt_dump.c
tstXptLink_TEMPLATE            = XPCOMEXE
tstXptLink_SOURCES             = xpcom/typelib/xpt/tools/xpt_link.c




IDLFILES = \
	xpcom/base/nsIDebug.idl \
	xpcom/base/nsIInterfaceRequestor.idl \
	xpcom/base/nsIMemory.idl \
	xpcom/base/nsIProgrammingLanguage.idl \
	xpcom/base/nsISupports.idl \
	xpcom/base/nsITraceRefcnt.idl \
	xpcom/base/nsIWeakReference.idl \
	xpcom/base/nsIConsoleMessage.idl \
	xpcom/base/nsIConsoleService.idl \
	xpcom/base/nsIConsoleListener.idl \
	xpcom/base/nsIErrorService.idl \
	xpcom/base/nsIException.idl \
	xpcom/base/nsIExceptionService.idl \
	xpcom/base/nsrootidl.idl \
	xpcom/components/nsIClassInfo.idl \
	xpcom/components/nsIComponentRegistrar.idl \
	xpcom/components/nsIFactory.idl \
	xpcom/components/nsIModule.idl \
	xpcom/components/nsIServiceManager.idl \
	xpcom/components/nsIComponentManager.idl \
	xpcom/components/nsICategoryManager.idl \
	xpcom/components/nsIComponentLoader.idl \
	xpcom/components/nsINativeComponentLoader.idl \
	xpcom/components/nsIComponentManagerObsolete.idl \
	xpcom/components/nsIComponentLoaderManager.idl \
	xpcom/ds/nsISupportsArray.idl \
	xpcom/ds/nsICollection.idl \
	xpcom/ds/nsISerializable.idl \
	xpcom/ds/nsIEnumerator.idl \
	xpcom/ds/nsISimpleEnumerator.idl \
	xpcom/ds/nsIObserverService.idl \
	xpcom/ds/nsIObserver.idl \
	xpcom/ds/nsIAtom.idl \
	xpcom/ds/nsIAtomService.idl \
	xpcom/ds/nsIProperties.idl \
	xpcom/ds/nsIPersistentProperties2.idl \
	xpcom/ds/nsIRecyclingAllocator.idl \
	xpcom/ds/nsIStringEnumerator.idl \
	xpcom/ds/nsISupportsPrimitives.idl \
	xpcom/ds/nsISupportsIterators.idl \
	xpcom/ds/nsIVariant.idl \
	xpcom/ds/nsITimelineService.idl \
	xpcom/ds/nsIArray.idl \
	xpcom/ds/nsIPropertyBag.idl \
	xpcom/ds/nsIHashable.idl \
	xpcom/io/nsIDirectoryService.idl \
	xpcom/io/nsIDirectoryEnumerator.idl \
	xpcom/io/nsIFile.idl \
	xpcom/io/nsILocalFile.idl \
	xpcom/io/nsILocalFileMac.idl \
	xpcom/io/nsIInputStream.idl \
	xpcom/io/nsIObjectInputStream.idl \
	xpcom/io/nsIBinaryInputStream.idl \
	xpcom/io/nsIObjectOutputStream.idl \
	xpcom/io/nsIBinaryOutputStream.idl \
	xpcom/io/nsIOutputStream.idl \
	xpcom/io/nsIStreamBufferAccess.idl \
	xpcom/io/nsIByteArrayInputStream.idl \
	xpcom/io/nsISeekableStream.idl \
	xpcom/io/nsIFastLoadFileControl.idl \
	xpcom/io/nsIFastLoadService.idl \
	xpcom/io/nsIInputStreamTee.idl \
	xpcom/io/nsIMultiplexInputStream.idl \
	xpcom/io/nsIPipe.idl \
	xpcom/io/nsIAsyncInputStream.idl \
	xpcom/io/nsIAsyncOutputStream.idl \
	xpcom/io/nsIScriptableInputStream.idl \
	xpcom/io/nsIStorageStream.idl \
	xpcom/io/nsIStringStream.idl \
	xpcom/io/nsILineInputStream.idl \
	xpcom/proxy/public/nsIProxyObjectManager.idl \
	xpcom/threads/nsIEventQueueService.idl \
	xpcom/threads/nsIEventQueue.idl \
	xpcom/threads/nsIEventTarget.idl \
	xpcom/threads/nsIRunnable.idl \
	xpcom/threads/nsIThread.idl \
	xpcom/threads/nsITimer.idl \
	xpcom/threads/nsIEnvironment.idl \
	xpcom/threads/nsITimerInternal.idl \
	xpcom/threads/nsITimerManager.idl \
	xpcom/threads/nsIProcess.idl \
	xpcom/reflect/xptinfo/public/nsIInterfaceInfo.idl \
	xpcom/reflect/xptinfo/public/nsIInterfaceInfoManager.idl \
	xpcom/reflect/xptinfo/public/nsIXPTLoader.idl \
	ipc/ipcd/client/public/ipcIService.idl \
	ipc/ipcd/client/public/ipcIMessageObserver.idl \
	ipc/ipcd/client/public/ipcIClientObserver.idl \
	ipc/ipcd/extensions/lock/public/ipcILockService.idl \
	ipc/ipcd/extensions/transmngr/public/ipcITransactionService.idl \
	ipc/ipcd/extensions/dconnect/public/ipcIDConnectService.idl \
	ipc/ipcd/extensions/transmngr/public/ipcITransactionObserver.idl


OTHER_CLEAN += \
	$(PATH_VBox-xpcom-string)/idl_ts \
	$(addprefix $(VBOX_PATH_SDK)/include/,$(notdir $(subst .idl,.h,$(IDLFILES)))) \
	$(addprefix $(VBOX_PATH_SDK)/include/,$(notdir $(subst .idl,.xpt,$(IDLFILES)))) \
	$(addprefix $(VBOX_PATH_SDK)/idl/,$(notdir $(IDLFILES)))


# generate rules
include $(PATH_KBUILD)/footer.kmk



XPTFILES = $(addprefix $(PATH_TARGET)/, \
	nsIConsoleListener.xpt \
	nsIConsoleMessage.xpt \
	nsIConsoleService.xpt \
	nsIErrorService.xpt \
	nsIException.xpt \
	nsIExceptionService.xpt \
	nsIDebug.xpt \
	nsIInterfaceRequestor.xpt \
	nsIMemory.xpt \
	nsIProgrammingLanguage.xpt \
	nsISupports.xpt \
	nsITraceRefcnt.xpt \
	nsIWeakReference.xpt \
	nsrootidl.xpt \
	nsIAtom.xpt \
	nsIAtomService.xpt \
	nsICollection.xpt \
	nsIEnumerator.xpt \
	nsIPersistentProperties2.xpt \
	nsIPropertyBag.xpt \
	nsIRecyclingAllocator.xpt \
	nsIVariant.xpt \
	nsISerializable.xpt \
	nsIStringEnumerator.xpt \
	nsISupportsArray.xpt \
	nsISupportsIterators.xpt \
	nsITimelineService.xpt \
	nsIArray.xpt \
	nsIObserverService.xpt \
	nsIObserver.xpt \
	nsIProperties.xpt \
	nsISimpleEnumerator.xpt \
	nsISupportsPrimitives.xpt \
	nsIBinaryInputStream.xpt \
	nsIBinaryOutputStream.xpt \
	nsIByteArrayInputStream.xpt \
	nsIFastLoadFileControl.xpt \
	nsIFastLoadService.xpt \
	nsIInputStreamTee.xpt \
	nsILineInputStream.xpt \
	nsIMultiplexInputStream.xpt \
	nsIObjectInputStream.xpt \
	nsIObjectOutputStream.xpt \
	nsIPipe.xpt \
	nsISeekableStream.xpt \
	nsIStorageStream.xpt \
	nsIStringStream.xpt \
	nsIStreamBufferAccess.xpt \
	nsIAsyncInputStream.xpt \
	nsIAsyncOutputStream.xpt \
	nsIDirectoryService.xpt \
	nsIFile.xpt \
	nsILocalFile.xpt \
	nsIInputStream.xpt \
	nsIOutputStream.xpt \
	nsIScriptableInputStream.xpt \
	nsIComponentLoader.xpt \
	nsIComponentLoaderManager.xpt \
	nsIComponentManagerObsolete.xpt \
	nsINativeComponentLoader.xpt \
	nsIClassInfo.xpt \
	nsIComponentRegistrar.xpt \
	nsIFactory.xpt \
	nsIModule.xpt \
	nsIServiceManager.xpt \
	nsIComponentManager.xpt \
	nsICategoryManager.xpt \
	nsIThread.xpt \
	nsITimer.xpt \
	nsITimerInternal.xpt \
	nsITimerManager.xpt \
	nsIRunnable.xpt \
	nsIEventTarget.xpt \
	nsIEventQueue.xpt \
	nsIEventQueueService.xpt \
	nsIEnvironment.xpt \
	nsIProcess.xpt \
	nsIInterfaceInfo.xpt \
	nsIInterfaceInfoManager.xpt \
	nsIXPTLoader.xpt)

OTHER_CLEAN += \
	$(XPTFILES)

# combined typelib library
$(XPCOM_TYPELIB): $(XPTFILES) | $(TARGET_xp_link)
	$(call MSG_LINK,XPCOM_TYPELIB,$@)
	$(QUIET)$(TARGET_xpt_link) $@ $^

# generate build stamps
$(PATH_VBox-xpcom-nspr)/_pr_bld.h:
	$(call MSG_GENERATE,,$@)
	$(QUIET)echo '#define _BUILD_STRING "$(shell date "+%Y-%m-%d %T")"' > $@

$(PATH_VBox-xpcom-nspr)/_pl_bld.h:
	$(call MSG_GENERATE,,$@)
	$(QUIET)echo '#define _BUILD_STRING "$(shell date "+%Y-%m-%d %T")"' > $@

#
# Generate IDL rules.
#

##
# Define for compiling one IDL into a header and a typelib
# @param idl     The filename with everything.
XPIDL_INCS = -I xpcom/base/ -I xpcom/ds/ -I xpcom/components/ -I xpcom/io/ -I xpcom/threads/ -I xpcom/reflect/xptinfo/public/
define def_IDL
$(addprefix $(VBOX_PATH_SDK)/include/,$(notdir $(subst .idl,.h,$(idl)))) \
            $(PATH_TARGET)/$(notdir $(subst .idl,.xpt,$(idl))): $(idl) | $(TARGET_xpidl)
	$$(call MSG_TOOL,xpidl,XPCOM,$$<,$$@)
	$$(QUIET)$(MKDIR) -p $(VBOX_PATH_SDK)/include $(VBOX_PATH_SDK)/idl
	$$(QUIET)$$(TARGET_xpidl) -m header $(XPIDL_INCS) -e $$@ $$<
	$$(QUIET)$$(TARGET_xpidl) -m typelib $(XPIDL_INCS) -e $(addprefix $(PATH_TARGET)/,$(notdir $(subst .idl,.xpt,$(idl)))) $$<
	$$(QUIET)$(CP) $$< $$(VBOX_PATH_SDK)/idl
endef

$(foreach idl, $(IDLFILES), $(eval $(def_IDL)))

# dummy target.
$(PATH_VBox-xpcom-string)/idl_ts: $(addprefix $(VBOX_PATH_SDK)/include/,$(notdir $(subst .idl,.h,$(IDLFILES))))
	$(call MSG_L1,IDL processing completed.)
	$(QUIET)$(MKDIR) -p $(dir $@)
	$(QUIET)$(ECHO_EXT) > $@

# Manual dependency...
xpcom/string/src/nsAString.cpp: $(PATH_VBox-xpcom-string)/idl_ts

