# $Id$
## @file
# Sub-Makefile for the storage device & driver testcases.
#

#
# Copyright (C) 2006-2010 Oracle Corporation
#
# This file is part of VirtualBox Open Source Edition (OSE), as
# available from http://www.virtualbox.org. This file is free software;
# you can redistribute it and/or modify it under the terms of the GNU
# General Public License (GPL) as published by the Free Software
# Foundation, in version 2 as it comes in the "COPYING" file of the
# VirtualBox OSE distribution. VirtualBox OSE is distributed in the
# hope that it will be useful, but WITHOUT ANY WARRANTY of any kind.
#

SUB_DEPTH = ../../../../..
include	$(KBUILD_PATH)/subheader.kmk

#
# vditool - useful too for manipulating VDIs, but now pretty obsolete and
# probably will go away soon. Testcase only now.
#
ifdef VBOX_WITH_TESTCASES
 PROGRAMS += vditool
  vditool_TEMPLATE = VBOXR3TSTEXE
  vditool_LIBS     = $(LIB_DDU) $(LIB_RUNTIME)
  vditool_SOURCES  = vditool.cpp
endif


#
# Basic testcase for the VDI code.
#
#ifdef VBOX_WITH_TESTCASES
# PROGRAMS += tstVDI
# ifeq ($(KBUILD_TARGET),l4)
#  tstVDI_TEMPLATE = VBOXLNXHOSTR3EXE
# else
#  tstVDI_TEMPLATE = VBOXR3TSTEXE
# endif
# tstVDI_LIBS     = $(vditool_LIBS)
# tstVDI_SOURCES  = tstVDI.cpp
#endif

#
# Basic testcases for the VD code.
#
ifdef VBOX_WITH_TESTCASES
 PROGRAMS += tstVD tstVD-2 tstVDCopy tstVDSnap tstVDShareable tstVDSetUuid
 if1of ($(KBUILD_TARGET), darwin freebsd linux solaris)
  PROGRAMS += VBoxFixHdd
 endif
 ifeq ($(KBUILD_TARGET),l4)
  tstVD_TEMPLATE = VBOXLNXHOSTR3EXE
  tstVD-2_TEMPLATE = VBOXLNXHOSTR3EXE
  tstVDCopy_TEMPLATE = VBOXLNXHOSTR3EXE
  tstVDSnap_TEMPLATE = VBOXLNXHOSTR3EXE
  tstVDShareable_TEMPLATE = VBOXLNXHOSTR3EXE
  tstVDSetUuid_TEMPLATE = VBOXLNXHOSTR3EXE
 else
  tstVD_TEMPLATE = VBOXR3TSTEXE
  tstVD-2_TEMPLATE = VBOXR3TSTEXE
  tstVDCopy_TEMPLATE = VBOXR3TSTEXE
  tstVDSnap_TEMPLATE = VBOXR3TSTEXE
  tstVDShareable_TEMPLATE = VBOXR3TSTEXE
  tstVDSetUuid_TEMPLATE = VBOXR3TSTEXE
  VBoxFixHdd_TEMPLATE = VBOXR3STATIC
 endif
 tstVD_LIBS     = $(LIB_DDU) $(LIB_RUNTIME)
 tstVD-2_LIBS   = $(LIB_DDU) $(LIB_RUNTIME)
 tstVDCopy_LIBS   = $(LIB_DDU) $(LIB_RUNTIME)
 tstVDSnap_LIBS   = $(LIB_DDU) $(LIB_RUNTIME)
 tstVDShareable_LIBS   = $(LIB_DDU) $(LIB_RUNTIME)
 tstVDSetUuid_LIBS   = $(LIB_DDU) $(LIB_RUNTIME)
 VBoxFixHdd_LIBS = \
	$(VBOX_LIB_RUNTIME_STATIC) \
	$(PATH_LIB)/VBox-liblzf$(VBOX_SUFF_LIB) \
	$(SDK_VBOX_ZLIB_LIBS)
 ifeq ($(KBUILD_TARGET),linux)
  VBoxFixHdd_LIBS += crypt
 endif
 tstVD_SOURCES  = tstVD.cpp
 tstVD-2_SOURCES  = tstVD-2.cpp
 tstVDCopy_SOURCES  = tstVDCopy.cpp
 tstVDSnap_SOURCES  = tstVDSnap.cpp
 tstVDShareable_SOURCES = tstVDShareable.cpp
 tstVDSetUuid_SOURCES = tstVDSetUuid.cpp
 VBoxFixHdd_SOURCES = \
	tstVDSetUuid.cpp \
	tstVDSetUuidStubs.cpp \
	$(VBOX_PATH_DEVICES_SRC)/Storage/VBoxHDD.cpp \
	$(VBOX_PATH_DEVICES_SRC)/Storage/RawHDDCore.cpp \
	$(VBOX_PATH_DEVICES_SRC)/Storage/VmdkHDDCore.cpp \
	$(VBOX_PATH_DEVICES_SRC)/Storage/VDIHDDCore.cpp \
	$(VBOX_PATH_DEVICES_SRC)/Storage/VHDHDDCore.cpp \
	$(VBOX_PATH_DEVICES_SRC)/Storage/ParallelsHDDCore.cpp
 ifdef VBOX_WITH_NEW_IO_CODE
 VBoxFixHdd_DEFS += VBOX_WITH_NEW_IO_CODE
 endif
 VBoxFixHdd_DEFS += VBOX_HDD_NO_DYNAMIC_BACKENDS
endif

include	$(KBUILD_PATH)/subfooter.kmk

