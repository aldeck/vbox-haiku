#
# VirtualBox Guest Additions kernel module Makefile, common parts.
#
# (For 2.6.x, the main file must be called 'Makefile'!)
#
# Copyright (C) 2006-2011 Oracle Corporation
#
# This file is part of VirtualBox Open Source Edition (OSE), as
# available from http://www.virtualbox.org. This file is free software;
# you can redistribute it and/or modify it under the terms of the GNU
# General Public License (GPL) as published by the Free Software
# Foundation, in version 2 as it comes in the "COPYING" file of the
# VirtualBox OSE distribution. VirtualBox OSE is distributed in the
# hope that it will be useful, but WITHOUT ANY WARRANTY of any kind.
#

#
# These file should be included by the Makefiles for any kernel modules we
# build as part of the Guest Additions.  The intended way of doing this is as
# follows:
#
# include Makefile.include
# MOD_NAME = <name of the module to be built, without extension>
# MOD_OBJS = <list of object files which should be included>
# MOD_DEFS = <any additional defines which this module needs>
# MOD_INCL = <any additional include paths which this module needs>
# MOD_CFLAGS = <any additional CFLAGS which this module needs>
# MOD_CLEAN = <list of directories that the clean target should look at>
#
# The kmk kBuild define KBUILD_TARGET_ARCH is available.
#
# @todo the shared folders module Makefile also includes the following bits.
# Integrate them if necessary.
# MOD_CFLAGS += -DEXPORT_SYMTAB -DVBGL_VBOXGUEST -DRT_WITH_VBOX
#
# # special hack for Fedora Core 6 2.6.18 (fc6), rhel5 2.6.18 (el5),
# # ClarkConnect 4.3 (cc4) and ClarkConnect 5 (v5)
# ifeq ($(KERNELRELEASE),)
#  KFLAGS += $(foreach inc,$(KERN_INCL),\
#              $(if $(wildcard $(inc)/linux/utsrelease.h),\
#                $(if $(shell grep '"2.6.18.*fc6.*"' $(inc)/linux/utsrelease.h; \
# 			    grep '"2.6.18.*el5.*"' $(inc)/linux/utsrelease.h; \
# 			    grep '"2.6.18.*v5.*"'  $(inc)/linux/utsrelease.h; \
# 			    grep '"2.6.18.*cc4.*"' $(inc)/linux/utsrelease.h),\
# 		-DKERNEL_FC6,),))
# else
#  KFLAGS += $(if $(shell echo "$(KERNELRELEASE)"|grep '2.6.18.*fc6.*';\
# 			echo "$(KERNELRELEASE)"|grep '2.6.18.*el5.*';\
# 			echo "$(KERNELRELEASE)"|grep '2.6.18.*v5.*';\
# 			echo "$(KERNELRELEASE)"|grep '2.6.18.*cc4.*'),\
# 		-DKERNEL_FC6,)
# endif
# 
## important: Don't remove Module.symvers! DKMS does 'make clean' before building ...
#	rm -rf .vboxsf* .tmp_ver* vboxsf.* Modules.symvers modules.order
# 



# override is required by the Debian guys
override MODULE = $(MOD_NAME)
OBJS   = $(MOD_OBJS)

ifneq ($(MAKECMDGOALS),clean)

KBUILD_VERBOSE ?= 1

#
# Compiler options
#
ifndef INCL
 INCL    := $(addprefix -I,$(KERN_INCL) $(EXTRA_INCL))
 ifndef KBUILD_EXTMOD
  KBUILD_EXTMOD := $(shell pwd)
 endif
 INCL    += $(MOD_INCL)
 export INCL
endif
KFLAGS   := -D__KERNEL__ -DMODULE \
		-DVBOX -DRT_OS_LINUX -DIN_RING0 -DIN_RT_R0 $(MOD_DEFS)
ifeq ($(BUILD_TYPE),debug)
KFLAGS   += -DDEBUG
endif

ifeq ($(KERN_VERSION), 24)
#
# 2.4
#

ifeq ($(BUILD_TARGET_ARCH),amd64)
 KFLAGS  += -mcmodel=kernel
endif

CFLAGS := -O2 -DVBOX_LINUX_2_4 -DEXPORT_SYMTAB $(INCL) $(KFLAGS) $(KDEBUG) \
		$(MOD_CFLAGS)
MODULE_EXT := o

# 2.4 Module linking
$(MODULE).o: $(OBJS)
	$(LD) -o $@ -r $(OBJS)

.PHONY: $(MODULE)
all: $(MODULE)
$(MODULE): $(MODULE).o

else
#
# 2.6 and later
#

MODULE_EXT := ko

$(MODULE)-y  := $(OBJS)

# build defs
EXTRA_CFLAGS += $(MOD_CFLAGS) $(INCL) $(KFLAGS) $(KDEBUG)

all: $(MODULE)

obj-m += $(MODULE).o

$(MODULE):
	$(MAKE) KBUILD_VERBOSE=$(KBUILD_VERBOSE) -C $(KERN_DIR) SUBDIRS=$(CURDIR) SRCROOT=$(CURDIR) modules

endif

install: $(MODULE)
	@mkdir -p $(MODULE_DIR); \
	install -m 0664 -o root -g root $(MODULE).$(MODULE_EXT) $(MODULE_DIR); \
	PATH="$(PATH):/bin:/sbin" depmod -a;

endif # eq($(MAKECMDGOALS),clean)

clean:
	for f in $(MOD_CLEAN); do rm -f $$f/*.o $$f/.*.cmd $$f/.*.flags; done
	rm -rf .$(MOD_NAME)* .tmp_ver* $(MOD_NAME).* Module.symvers Modules.symvers modules.order
