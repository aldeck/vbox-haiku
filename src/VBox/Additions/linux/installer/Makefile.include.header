#
# VirtualBox Guest Additions kernel module Makefile, common parts.
#
# (For 2.6.x, the main file must be called 'Makefile'!)
#
# Copyright (C) 2006-2007 Oracle Corporation
#
# This file is part of VirtualBox Open Source Edition (OSE), as
# available from http://www.virtualbox.org. This file is free software;
# you can redistribute it and/or modify it under the terms of the GNU
# General Public License (GPL) as published by the Free Software
# Foundation, in version 2 as it comes in the "COPYING" file of the
# VirtualBox OSE distribution. VirtualBox OSE is distributed in the
# hope that it will be useful, but WITHOUT ANY WARRANTY of any kind.
#

#
# These file should be included by the Makefiles for any kernel modules we
# build as part of the Guest Additions.  The intended way of doing this is as
# follows:
#
# # Linux kbuild sets this to our source directory if we are called from
# # there
# obj ?= $(CURDIR)
# include $(obj)/Makefile.include.header
# MOD_NAME = <name of the module to be built, without extension>
# MOD_OBJS = <list of object files which should be included>
# MOD_FLAGS = <any additional CFLAGS which this module needs>
# include $(obj)/Makefile.include.footer
#
# The kmk kBuild define KBUILD_TARGET_ARCH is available.
#
# @todo the shared folders module Makefile also includes the following bits.
# Integrate them if necessary.
# MOD_FLAGS += -DEXPORT_SYMTAB -DVBGL_VBOXGUEST -DRT_WITH_VBOX
#
# # special hack for Fedora Core 6 2.6.18 (fc6), rhel5 2.6.18 (el5),
# # ClarkConnect 4.3 (cc4) and ClarkConnect 5 (v5)
# ifeq ($(KERNELRELEASE),)
#  KFLAGS += $(foreach inc,$(KERN_INCL),\
#              $(if $(wildcard $(inc)/linux/utsrelease.h),\
#                $(if $(shell grep '"2.6.18.*fc6.*"' $(inc)/linux/utsrelease.h; \
# 			    grep '"2.6.18.*el5.*"' $(inc)/linux/utsrelease.h; \
# 			    grep '"2.6.18.*v5.*"'  $(inc)/linux/utsrelease.h; \
# 			    grep '"2.6.18.*cc4.*"' $(inc)/linux/utsrelease.h),\
# 		-DKERNEL_FC6,),))
# else
#  KFLAGS += $(if $(shell echo "$(KERNELRELEASE)"|grep '2.6.18.*fc6.*';\
# 			echo "$(KERNELRELEASE)"|grep '2.6.18.*el5.*';\
# 			echo "$(KERNELRELEASE)"|grep '2.6.18.*v5.*';\
# 			echo "$(KERNELRELEASE)"|grep '2.6.18.*cc4.*'),\
# 		-DKERNEL_FC6,)
# endif
# 
## important: Don't remove Module.symvers! DKMS does 'make clean' before building ...
#	rm -rf .vboxsf* .tmp_ver* vboxsf.* Modules.symvers modules.order
# 

#
# First, figure out which architecture we're targeting and the build type.
# (We have to support basic cross building (ARCH=i386|x86_64).)
# While at it, warn about BUILD_* vars found to help with user problems.
#
ifneq ($(filter-out amd64 x86,$(BUILD_TARGET_ARCH)),)
 $(warning Ignoring unknown BUILD_TARGET_ARCH value '$(BUILD_TARGET_ARCH)'.)
 BUILD_TARGET_ARCH :=
endif
ifeq ($(BUILD_TARGET_ARCH),)
 ifeq ($(ARCH),x86_64)
  BUILD_TARGET_ARCH := amd64
 else
  ifeq ($(ARCH),i386)
   BUILD_TARGET_ARCH := x86
  else
   ifeq ($(filter-out x86_64 amd64 AMD64,$(shell uname -m)),)
    BUILD_TARGET_ARCH := amd64
   else
    BUILD_TARGET_ARCH := x86
   endif
  endif
 endif
else
 $(warning Using BUILD_TARGET_ARCH='$(BUILD_TARGET_ARCH)' from the $(origin BUILD_TARGET_ARCH).)
endif

ifneq ($(filter-out release profile debug strict,$(BUILD_TYPE)),)
 $(warning Ignoring unknown BUILD_TYPE value '$(BUILD_TYPE)'.)
 BUILD_TYPE :=
endif
ifeq ($(BUILD_TYPE),)
 BUILD_TYPE := release
else
 $(warning Using BUILD_TYPE='$(BUILD_TYPE)' from the $(origin BUILD_TYPE).)
endif
