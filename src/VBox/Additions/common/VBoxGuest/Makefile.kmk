# $Id$
## @file
# Makefile for the Cross Platform Guest Additions Driver.
#

#
# Copyright (C) 2007-2010 Oracle Corporation
#
# This file is part of VirtualBox Open Source Edition (OSE), as
# available from http://www.virtualbox.org. This file is free software;
# you can redistribute it and/or modify it under the terms of the GNU
# General Public License (GPL) as published by the Free Software
# Foundation, in version 2 as it comes in the "COPYING" file of the
# VirtualBox OSE distribution. VirtualBox OSE is distributed in the
# hope that it will be useful, but WITHOUT ANY WARRANTY of any kind.
#

SUB_DEPTH = ../../../../..
include	$(KBUILD_PATH)/subheader.kmk


if1of ($(KBUILD_TARGET), freebsd $(if $(defined VBOX_WITH_ADDITION_DRIVERS),linux,) os2 solaris)
 #
 # VBoxGuest - The Guest Additions Driver.
 #
 SYSMODS += VBoxGuest
 VBoxGuest_TEMPLATE      = VBOXGUESTR0
 VBoxGuest_NAME.freebsd  = vboxguest
 VBoxGuest_NAME.linux    = vboxguest
 VBoxGuest_NAME.solaris  = vboxguest
 VBoxGuest_NOINST.linux  = true
 VBoxGuest_DEFS.linux    = KBUILD_MODNAME=KBUILD_STR\(vboxguest\) KBUILD_BASENAME=KBUILD_STR\(vboxguest\) DEBUG_HASH=2 DEBUG_HASH2=3 EXPORT_SYMTAB
 VBoxGuest_DEFS.solaris  = VBOX_SVN_REV=$(VBOX_SVN_REV)
 VBoxGuest_DEPS.solaris += $(VBOX_SVN_REV_KMK)
 VBoxGuest_DEPS.linux   += $(VBOX_SVN_REV_HEADER)
 VBoxGuest_DEPS.freebsd += $(VBOX_SVN_REV_HEADER)
 VBoxGuest_DEFS          = VBGL_VBOXGUEST VBOX_WITH_HGCM
 VBoxGuest_INCS          = .
 VBoxGuest_INCS.freebsd  = $(PATH_VBoxGuest) $(PATH_INS)/gen-sys-hdrs
 VBoxGuest_INCS.linux    = ../../../Runtime/r0drv/linux
 ifneq ($(KBUILD_TARGET),os2)
  ifn1of ($(KBUILD_TARGET), linux freebsd solaris)
   VBoxGuest_SOURCES     = VBoxGuest-$(KBUILD_TARGET).cpp
  else
   VBoxGuest_SOURCES     = VBoxGuest-$(KBUILD_TARGET).c
  endif
  VBoxGuest_SOURCES     += \
  	VBoxGuest.cpp \
  	VBoxGuest2.cpp
  VBoxGuest2.cpp_DEFS    = VBOX_SVN_REV=$(VBOX_SVN_REV)
  VBoxGuest_LIBS         = \
  	$(VBOX_LIB_VBGL_R0BASE) \
  	$(VBOX_LIB_IPRT_GUEST_R0)
  VBoxGuest_ORDERDEPS.freebsd = \
  	$(PATH_INS)/gen-sys-hdrs/pci_if.h \
  	$(PATH_INS)/gen-sys-hdrs/bus_if.h \
  	$(PATH_INS)/gen-sys-hdrs/device_if.h

 else # OS/2:
  # The library order is crucial, so a bit of trickery is necessary.
  # A library is used to make sure that VBoxGuestA-os2.asm is first in the link. (temporary hack?)
  VBoxGuest_SOURCES       = \
  	VBoxGuestA-os2.asm \
  	VBoxGuest-os2.def
  #VBoxGuest_LDFLAGS       = -s -t -v
  VBoxGuest_LIBS          = \
  	$(TARGET_VBoxGuestLibOs2Hack) \
  	$(VBOX_LIB_VBGL_R0BASE) \
  	$(VBOX_LIB_IPRT_GUEST_R0) \
  	$(VBOX_GCC_LIBGCC) \
  	end
  ## When debugging init with kDrvTest:
  #VBoxGuest_NAME          = VBoxGst

  # see
  LIBRARIES += VBoxGuestLibOs2Hack
  VBoxGuestLibOs2Hack_TEMPLATE = VBOXGUESTR0LIB
  VBoxGuestLibOs2Hack_NOINST = true
  VBoxGuestLibOs2Hack_DEFS = $(VBoxGuest_DEFS)
  VBoxGuestLibOs2Hack_INCS = \
  	. \
  	$(PATH_ROOT)/src/VBox/Runtime/include # for the os2ddk
  VBoxGuestLibOs2Hack_SOURCES = \
  	VBoxGuest-os2.cpp \
  	VBoxGuest.cpp
 endif # OS/2

endif # enabled

ifeq ($(KBUILD_TARGET),linux)
 #
 # Install the source files and script(s).
 #
 include $(PATH_SUB_CURRENT)/linux/files_vboxguest
 # sources and stuff.
 INSTALLS += vboxguest-src
 vboxguest-src_INST     = $(INST_ADDITIONS)src/vboxguest/
 vboxguest-src_MODE     = a+r,u+w
 vboxguest-src_SOURCES  = $(subst ",,$(FILES_VBOXGUEST_NOBIN))
 vboxguest-src_SOURCES += $(if $(VBOX_OSE),,$(vboxguest-sh_0_OUTDIR)/dkms.conf)
 vboxguest-src_CLEAN    = $(vboxguest-sh_0_OUTDIR)/dkms.conf

 $$(vboxguest-sh_0_OUTDIR)/dkms.conf: \
 		$(PATH_SUB_CURRENT)/linux/dkms.conf \
 		$(VBOX_VERSION_STAMP) \
 		| $$(dir $$@)
	$(call MSG_TOOL,Creating,,$@)
	$(QUIET)$(SED) -e "s;_VERSION_;${VBOX_VERSION_STRING};g" --output $@ $<

 # scripts.
 INSTALLS += vboxguest-sh
 vboxguest-sh_INST      = $(INST_ADDITIONS)src/vboxguest/
 vboxguest-sh_MODE      = a+rx,u+w
 vboxguest-sh_SOURCES   = $(subst ",,$(FILES_VBOXGUEST_BIN))
 vboxguest-sh_SOURCES  += $(if $(VBOX_OSE),,$(PATH_ROOT)/src/VBox/HostDrivers/linux/do_Module.symvers)
 vboxguest-sh_SOURCES  += $(vboxguest-sh_0_OUTDIR)/build_in_tmp
 vboxguest-sh_CLEAN     = $(vboxguest-sh_0_OUTDIR)/build_in_tmp

 $$(vboxguest-sh_0_OUTDIR)/build_in_tmp: \
 		$(PATH_ROOT)/src/VBox/HostDrivers/linux/build_in_tmp \
 		$(VBOX_VERSION_STAMP) \
 		| $$(dir $$@)
	$(call MSG_TOOL,Creating,,$@)
	$(QUIET)$(SED) -e "s;_VERSION_;${VBOX_VERSION_STRING};g; s;_MODULE_;vboxguest;g; s;_BUILDTYPE_;${KBUILD_TYPE};g" --output $@ $<
	$(QUIET)$(CHMOD) 0755 $@

endif # Linux

ifeq ($(KBUILD_TARGET),freebsd)
 #
 # Install the source files and script(s).
 #
 include $(PATH_SUB_CURRENT)/freebsd/files_vboxguest
 # sources and stuff.
 INSTALLS += vboxguest-src
 vboxguest-src_INST     = $(INST_ADDITIONS)src/vboxguest/
 vboxguest-src_MODE     = a+r,u+w
 vboxguest-src_SOURCES  = $(subst ",,$(FILES_VBOXGUEST_NOBIN))

endif # FreeBSD

include	$(KBUILD_PATH)/subfooter.kmk

