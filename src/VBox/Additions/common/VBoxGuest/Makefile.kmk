# $Id$
## @file
# Makefile for the Cross Platform Guest Additions Driver.
#

#
# Copyright (C) 2007 Sun Microsystems, Inc.
#
# This file is part of VirtualBox Open Source Edition (OSE), as
# available from http://www.virtualbox.org. This file is free software;
# you can redistribute it and/or modify it under the terms of the GNU
# General Public License (GPL) as published by the Free Software
# Foundation, in version 2 as it comes in the "COPYING" file of the
# VirtualBox OSE distribution. VirtualBox OSE is distributed in the
# hope that it will be useful, but WITHOUT ANY WARRANTY of any kind.
#
# Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa
# Clara, CA 95054 USA or visit http://www.sun.com if you need
# additional information or have any questions.
#

DEPTH ?= ../../../../..
SUB_DEPTH = ../..
include	$(PATH_KBUILD)/subheader.kmk

# PORTME: OSes using mixed case driver names join OS/2, the others join Solaris below.

if1of ($(BUILD_TARGET), os2)
 #
 # VBoxGuest - The Guest Additions Driver (mixed case).
 #
 ifdef VBOX_WITH_OS2_ADDITIONS
  SYSMODS.os2 += VBoxGuest
  LIBRARIES += VBoxGuestLibOs2Hack
 endif
 VBoxGuest_TEMPLATE      = VBOXGUESTR0
 VBoxGuest_DEFS          = VBGL_VBOXGUEST VBOX_HGCM
 VBoxGuest_INCS         := $(PATH_SUB_CURRENT)
 ifneq ($(BUILD_TARGET),os2)
  VBoxGuest_SOURCES    = \
  	VBoxGuest-$(BUILD_TARGET).cpp \
  	VBoxGuest.cpp
  VBoxGuest_LIBS          = \
  	$(VBOX_LIB_VBGL_R0BASE) \
  	$(VBOX_LIB_IPRT_GUEST_R0)
 else # OS/2:
  # The library order is crusial, so a bit of trickery is necessary.
  # A library is used to make sure that VBoxGuestA-os2.asm is first in the link. (temporary hack?)
  VBoxGuest_SOURCES       = \
  	VBoxGuestA-os2.asm \
  	VBoxGuest-os2.def
  #VBoxGuest_LDFLAGS       = -s -t -v
  VBoxGuest_LIBS          = \
  	$(TARGET_VBoxGuestLibOs2Hack) \
  	$(VBOX_LIB_VBGL_R0BASE) \
  	$(VBOX_LIB_IPRT_GUEST_R0) \
  	$(VBOX_GCC_LIBGCC) \
  	end
  ## When debugging init with kDrvTest:
  #VBoxGuest_NAME          = VBoxGst

  VBoxGuestLibOs2Hack_TEMPLATE   = VBOXGUESTR0LIB
  VBoxGuestLibOs2Hack_NOINST     = 1
  VBoxGuestLibOs2Hack_DEFS       = $(VBoxGuest_DEFS)
  VBoxGuestLibOs2Hack_INCS      := \
  	$(PATH_SUB_CURRENT) \
  	$(PATH_TARGET) \
  	$(PATH_ROOT)/src/VBox/Runtime/include # for the os2ddk
  VBoxGuestLibOs2Hack_SOURCES    = \
  	VBoxGuest-os2.cpp \
  	VBoxGuest.cpp
 endif # OS/2

else if1of ($(BUILD_TARGET), freebsd solaris)
 #
 # vboxguest - The Guest Additions Driver (lower cased).
 #
 SYSMODS.solaris += vboxguest
 SYSMODS.freebsd += vboxguest
 vboxguest_TEMPLATE      = VBOXGUESTR0
 vboxguest_DEFS          = VBGL_VBOXGUEST VBOX_HGCM
 vboxguest_INCS         := \
	$(PATH_SUB_CURRENT)
 vboxguest_INCS.freebsd  = \
	$(PATH_TARGET)
 vboxguest_SOURCES       = \
 	VBoxGuest-$(BUILD_TARGET).c \
 	VBoxGuest.cpp
 vboxguest_LIBS          = \
 	$(VBOX_LIB_VBGL_R0BASE) \
 	$(VBOX_LIB_IPRT_GUEST_R0)
 vboxguest_DEPS.freebsd  = \
	$(PATH_TARGET)/pci_if.h \
	$(PATH_TARGET)/bus_if.h \
	$(PATH_TARGET)/device_if.h
 vboxguest_CLEAN.freebsd = $(vboxguest_DEPS.freebsd)

 #
 # FreeBSD: Genereate bus, device and pci interface headers. (explain why)
 #
 # We cannot give a output path to the awk program, it will always generate
 # the header next to the source. So, we'll have to temporarily copy the
 # source file to the destination direction for it to work out correctly.
 #
 VBOX_AWK := /usr/bin/awk
 $(PATH_TARGET)/bus_if.h: $(VBOX_FREEBSD_SRC)/kern/bus_if.m
	$(call MSG_TOOL,awk,VBoxGuest,$<,$@)
	$(QUIET)$(CP) -f $(VBOX_FREEBSD_SRC)/kern/bus_if.m $(PATH_TARGET)/bus_if.m
	$(QUIET)$(VBOX_AWK) -f $(VBOX_FREEBSD_SRC)/tools/makeobjops.awk $(PATH_TARGET)/bus_if.m -h -p
	$(QUIET)$(RM) $(PATH_TARGET)/bus_if.m

 $(PATH_TARGET)/device_if.h: $(VBOX_FREEBSD_SRC)/kern/device_if.m
	$(call MSG_TOOL,awk,VBoxGuest,$<,$@)
	$(QUIET)$(CP) -f $(VBOX_FREEBSD_SRC)/kern/device_if.m $(PATH_TARGET)/device_if.m
	$(QUIET)$(VBOX_AWK) -f $(VBOX_FREEBSD_SRC)/tools/makeobjops.awk $(PATH_TARGET)/device_if.m -h -p
	$(QUIET)$(RM) $(PATH_TARGET)/device_if.m

 $(PATH_TARGET)/pci_if.h: $(VBOX_FREEBSD_SRC)/dev/pci/pci_if.m
	$(call MSG_TOOL,awk,VBoxGuest,$<,$@)
	$(QUIET)$(CP) -f $(VBOX_FREEBSD_SRC)/dev/pci/pci_if.m $(PATH_TARGET)/pci_if.m
	$(QUIET)$(VBOX_AWK) -f $(VBOX_FREEBSD_SRC)/tools/makeobjops.awk $(PATH_TARGET)/pci_if.m -h -p
	$(QUIET)$(RM) $(PATH_TARGET)/pci_if.m

endif

include	$(PATH_KBUILD)/subfooter.kmk

