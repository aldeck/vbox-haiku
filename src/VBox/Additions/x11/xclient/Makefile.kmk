# $Id$
## @file
# Sub-Makefile for the VirtualBox Guest Addition X11 Client.
#

#
# Copyright (C) 2006-2007 innotek GmbH
#
# This file is part of VirtualBox Open Source Edition (OSE), as
# available from http://www.virtualbox.org. This file is free software;
# you can redistribute it and/or modify it under the terms of the GNU
# General Public License (GPL) as published by the Free Software
# Foundation, in version 2 as it comes in the "COPYING" file of the
# VirtualBox OSE distribution. VirtualBox OSE is distributed in the
# hope that it will be useful, but WITHOUT ANY WARRANTY of any kind.
#

DEPTH ?= ../../../../..
SUB_DEPTH = ../..
include	$(PATH_KBUILD)/subheader.kmk

#
# VBoxClient - clipboard and seamless.
#
PROGRAMS += VBoxClient

# Enable Seamless mode
VBOX_X11_SEAMLESS_GUEST := 1

VBoxClient_TEMPLATE = VBOXGUESTR3CPPEXE
VBoxClient_DEFS += VBOX_X11_CLIPBOARD VBOX_HGCM
VBoxClient_DEFS.linux += _GNU_SOURCE
VBoxClient_SOURCES = \
	main.cpp
VBoxClient_SOURCES += \
	clipboard.cpp
VBoxClient_LIBPATH = \
	$(VBOX_LIBPATH32_X11)
VBoxClient_LIBS = \
	$(VBOX_LIB_IPRT_GUEST_R3) \
	$(VBOX_LIB_VBGL_R3) \
	$(VBOX_LIB_IPRT_GUEST_R3) \
	X11 \
	Xt
ifdef VBOX_X11_SEAMLESS_GUEST
 VBoxClient_DEFS += SEAMLESS_GUEST DYNAMIC_RESIZE
 VBoxClient_SOURCES += \
	seamless-host.cpp \
	seamless-x11.cpp \
	thread.cpp \
	displaychange-x11.cpp
 VBoxClient_LIBS += \
	Xext Xmu
endif

#
# Link aginst libstdc++.a. (http://www.trilithium.com/johan/2005/06/static-libstdc/).
# (It would've been preferred to avoid features depending on libstdc++, of course...)
#
VBoxClient_LIBPATH  += $(PATH_TARGET)/VBoxClient
VBoxClient_ORDERDEPS = $(PATH_TARGET)/VBoxClient/libstdc++.a
VBoxClient_CLEAN     = $(PATH_TARGET)/VBoxClient/libstdc++.a
$(PATH_TARGET)/VBoxClient/libstdc++.a:
	$(call MSG_L1,Forcing static libstdc++)
	$(QUIET)$(MKDIR) -p $(@D)
	$(QUIET)$(LN_EXT) -sf `$(TOOL_$(VBOX_GCC32_TOOL)_CXX) -print-file-name=libstdc++.a` $@ \
	     || $(CP_EXT) -f  `$(TOOL_$(VBOX_GCC32_TOOL)_CXX) -print-file-name=libstdc++.a` $@


ifdef VBOX_X11_SEAMLESS_GUEST
 ifdef VBOX_WITH_TESTCASES
  #
  # Additional testcase designed to be run manually, which initiates and starts the Linux
  # guest client part of the seamless additions in the host, faking seamless events from
  # the host and writing information about guest events to standard output.
  #
  PROGRAMS += tstSeamlessX11
  tstSeamlessX11_TEMPLATE = VBOXR3TSTEXE
  tstSeamlessX11_SOURCES = \
  	testcase/tstSeamlessX11.cpp \
  	seamless-host.cpp \
  	seamless-x11.cpp \
  	thread.cpp
  tstSeamlessX11_LIBS = \
  	$(LIB_RUNTIME) \
  	Xext \
  	Xmu \
  	X11
 endif
endif

include	$(PATH_KBUILD)/subfooter.kmk
