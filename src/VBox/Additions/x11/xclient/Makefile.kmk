# $Id$
## @file
# Makefile for the VirtualBox Linux Guest Addition X11 Client.
#

#
# Copyright (C) 2006-2007 innotek GmbH
#
# This file is part of VirtualBox Open Source Edition (OSE), as
# available from http://www.virtualbox.org. This file is free software;
# you can redistribute it and/or modify it under the terms of the GNU
# General Public License (GPL) as published by the Free Software
# Foundation, in version 2 as it comes in the "COPYING" file of the
# VirtualBox OSE distribution. VirtualBox OSE is distributed in the
# hope that it will be useful, but WITHOUT ANY WARRANTY of any kind.
#

DEPTH = ../../../../..
include	$(PATH_KBUILD)/header.kmk

if1of ($(BUILD_TARGET),linux l4)

#
# vboxadd-xclient.
#
PROGRAMS += vboxadd-xclient
vboxadd-xclient_TEMPLATE = VBOXLNX32GUESTR3EXE
vboxadd-xclient_SOURCES  = clipboard.cpp main.cpp
vboxadd-xclient_DEFS    += VBOX_X11_CLIPBOARD
vboxadd-xclient_DEFS    += _GNU_SOURCE VBOX_HGCM
vboxadd-xclient_LIBPATH  = \
	$(VBOX_LIBPATH32_X11)
vboxadd-xclient_LIBS     = \
	$(PATH_LIB)/RuntimeLnx32GuestR3.a \
	$(PATH_LIB)/VBoxGuestR3LibLinux.a \
	$(PATH_LIB)/RuntimeLnx32GuestR3.a \
	pthread \
	rt \
	Xt \
	Xext \
	X11

#
# Link aginst libstdc++.a on linux. (http://www.trilithium.com/johan/2005/06/static-libstdc/).
# (It would've been preferred to avoid features depending on libstdc++, of course...)
#
vboxadd-xclient_LIBPATH.linux   = $(PATH_TARGET)/vboxadd-xclient
vboxadd-xclient_ORDERDEPS.linux = $(PATH_TARGET)/vboxadd-xclient/libstdc++.a
vboxadd-xclient_CLEAN.linux     = $(PATH_TARGET)/vboxadd-xclient/libstdc++.a
$(PATH_TARGET)/vboxadd-xclient/libstdc++.a:
	$(call MSG_L1,Forcing static libstdc++)
	$(QUIET)$(MKDIR) -p $(@D)
	$(QUIET)$(LN_EXT) -sf `$(TOOL_$(VBOX_GCC32_TOOL)_CXX) -print-file-name=libstdc++.a` $@ \
	     || $(CP_EXT) -f  `$(TOOL_$(VBOX_GCC32_TOOL)_CXX) -print-file-name=libstdc++.a` $@

ifdef VBOX_X11_SEAMLESS_GUEST
 vboxadd-xclient_DEFS += SEAMLESS_X11
 vboxadd-xclient_SOURCES += \
 	seamless-host.cpp \
 	seamless-x11.cpp \
 	thread.cpp

 ifdef VBOX_WITH_TESTCASES
  #
  # Additional testcase designed to be run manually, which initiates and starts the Linux
  # guest client part of the seamless additions in the host, faking seamless events from
  # the host and writing information about guest events to standard output.
  #
  PROGRAMS += tstSeamlessX11
  tstSeamlessX11_TEMPLATE  = VBOXR3TSTEXE
  tstSeamlessX11_SOURCES   = \
  	testcase/tstSeamlessX11.cpp \
  	seamless-host.cpp \
  	seamless-x11.cpp \
  	thread.cpp
  tstSeamlessX11_LIBS      = \
  	$(LIB_RUNTIME) \
  	Xext \
  	X11
 endif
endif

else ifeq ($(BUILD_TARGET),solaris)
#
# VBoxClient.
#
## @todo r=bird: merge this with the linux additions one way or the other, pleaaaase!
PROGRAMS += VBoxClient
VBoxClient_TEMPLATE = VBOXGUESTR3EXE
VBoxClient_DEFS    += VBOX_X11_CLIPBOARD VBOX_HGCM
VBoxClient_SOURCES  = \
	clipboard-new.cpp \
	main.cpp
VBoxClient_LIBS = \
	$(VBOX_LIB_IPRT_GUEST_R3) \
	$(VBOX_LIB_VBGL_R3) \
	X11 \
	Xt
endif # target solaris

include	$(PATH_KBUILD)/footer.kmk
