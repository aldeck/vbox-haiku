# $Id$
## @file
# Sub-Makefile for the VirtualBox Windows Chromium OpenGL ICD.
#

#
# Copyright (C) 2008 Sun Microsystems, Inc.
#
# This file is part of VirtualBox Open Source Edition (OSE), as
# available from http://www.virtualbox.org. This file is free software;
# you can redistribute it and/or modify it under the terms of the GNU
# General Public License (GPL) as published by the Free Software
# Foundation, in version 2 as it comes in the "COPYING" file of the
# VirtualBox OSE distribution. VirtualBox OSE is distributed in the
# hope that it will be useful, but WITHOUT ANY WARRANTY of any kind.
#
# Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa
# Clara, CA 95054 USA or visit http://www.sun.com if you need
# additional information or have any questions.
#


SUB_DEPTH = ../../../..

include	$(KBUILD_PATH)/subheader.kmk

if1of ($(KBUILD_HOST), win)
 VBOX_CROGL_HOST_PYTHONPATH := $(VBOX_PATH_CROGL_GLAPI);$(PATH_ROOT)/src/VBox/GuestHost/OpenGL/packer;$(PATH_ROOT)/src/VBox/HostServices/SharedOpenGL/crserverlib
else
 VBOX_CROGL_HOST_PYTHONPATH := $(VBOX_PATH_CROGL_GLAPI):$(PATH_ROOT)/src/VBox/GuestHost/OpenGL/packer:$(PATH_ROOT)/src/VBox/HostServices/SharedOpenGL/crserverlib
endif

VBOX_OPENGL_HEADERS = gl.h glu.h
VBOX_PATH_MACOSX_OPENGL = $(PATH_OBJ)/VBoxOGL/GL

DLLS      += VBoxSharedCrOpenGL
DLLS      += VBoxOGLrenderspu
LIBRARIES += VBoxOGLcrserverlib
LIBRARIES += VBoxOGLcrunpacker

# We have to symlink the system headers of OpenGl cause they have some
# different directory hierarchy on Mac OS X (no /GL sub directory).
$(addprefix $(VBOX_PATH_MACOSX_OPENGL)/,$(VBOX_OPENGL_HEADERS)): \
        $(VBOX_PATH_MACOSX_OPENGL)/%: $(VBOX_PATH_MACOSX_SDK)/System/Library/Frameworks/OpenGL.framework/Versions/Current/Headers/% | $$(dir $$@)
	$(LN) -s $< $@

## VBOXOGLR3HOST ##
TEMPLATE_VBOXOGLR3HOST                = VBox OpenGL Host Libraries
TEMPLATE_VBOXOGLR3HOST_EXTENDS        = VBOXR3NP
TEMPLATE_VBOXOGLR3HOST_DEFS           = $(TEMPLATE_VBOXR3NP_DEFS) CHROMIUM_THREADSAFE VBOX_WITH_HGCM UNPACKS
TEMPLATE_VBOXOGLR3HOST_DEFS.win       = _WIN32_WINNT=0x0500 WINDOWS=1
TEMPLATE_VBOXOGLR3HOST_DEFS.linux     = Linux
TEMPLATE_VBOXOGLR3HOST_DEFS.solaris   = SunOS
TEMPLATE_VBOXOGLR3HOST_DEFS.darwin    = DARWIN GL_GLEXT_LEGACY
TEMPLATE_VBOXOGLR3HOST_INCS           = $(VBOX_PATH_CROGL_INCLUDE) $(VBOX_PATH_CROGL_GENFILES)
TEMPLATE_VBOXOGLR3HOST_DEPS.darwin    = $(addprefix $(VBOX_PATH_MACOSX_OPENGL)/,$(VBOX_OPENGL_HEADERS))
TEMPLATE_VBOXOGLR3HOST_INCS.darwin    = $(VBOX_PATH_MACOSX_OPENGL)/..
TEMPLATE_VBOXOGLR3HOST_BLDDIRS.darwin = $(VBOX_PATH_MACOSX_OPENGL)
TEMPLATE_VBOXOGLR3HOST_LDFLAGS.linux  = -Wl,--no-as-needed
TEMPLATE_VBOXOGLR3HOST_LDFLAGS.darwin = -framework Carbon -framework OpenGL -current_version $(VBOX_VERSION_MAJOR).$(VBOX_VERSION_MINOR).$(VBOX_VERSION_BUILD)
TEMPLATE_VBOXOGLR3HOST_BLDDIRS        = $(VBOX_PATH_CROGL_GENFILES)/

#
# VBoxSharedCrOpenGL
#

VBoxSharedCrOpenGL_TEMPLATE = VBOXOGLR3HOST
VBoxSharedCrOpenGL_INCS := \
	$(PATH_SUB_CURRENT) \
	$(PATH_VBoxSVC)
VBoxSharedCrOpenGL_INCS.win += \
	$(PATH_TOOL_$(VBOX_VCC_TOOL)_ATLMFC_INC) \
	$(VBOX_PATH_SDK)/bindings/mscom/include \
	$(PATH_VBoxCOM)
ifdef VBOX_WITH_XPCOM
 VBoxSharedCrOpenGL_DEFS          += VBOX_WITH_XPCOM
 VBoxSharedCrOpenGL_INCS          += $(VBOX_XPCOM_INCS)
 VBoxSharedCrOpenGL_INTERMEDIATES += $(VBOX_PATH_SDK)/bindings/xpcom/include/VirtualBox_XPCOM.h
endif
VBoxSharedCrOpenGL_LDFLAGS.darwin += -install_name $(VBOX_DYLD_EXECUTABLE_PATH)/VBoxSharedCrOpenGL.dylib
VBoxSharedCrOpenGL_SOURCES        += crserver/crservice.cpp
VBoxSharedCrOpenGL_LIBS.win = \
	$(PATH_OBJ)/VBoxOGLhostcrutil/VBoxOGLhostcrutil$(VBOX_SUFF_LIB) \
	$(PATH_LIB)/VBoxOGLhostspuload$(VBOX_SUFF_LIB) \
	$(PATH_LIB)/VBoxOGLhostcrstate$(VBOX_SUFF_LIB) \
	$(PATH_LIB)/VBoxOGLhostcrpacker$(VBOX_SUFF_LIB) \
	$(PATH_OBJ)/VBoxOGLrenderspu/VBoxOGLrenderspu$(VBOX_SUFF_LIB) \
	$(PATH_LIB)/VBoxOGLcrserverlib$(VBOX_SUFF_LIB) \
	$(PATH_LIB)/VBoxOGLcrunpacker$(VBOX_SUFF_LIB) \
	$(PATH_TOOL_$(VBOX_VCC_TOOL)_ATLMFC_LIB)/atls$(VBOX_SUFF_LIB)\
	$(LIB_RUNTIME) $(LIB_VMM)
if1of ($(KBUILD_TARGET), linux solaris darwin)
 VBoxSharedCrOpenGL_LIBS += \
	$(PATH_LIB)/VBoxOGLcrserverlib$(VBOX_SUFF_LIB) \
	$(PATH_BIN)/VBoxOGLrenderspu$(VBOX_SUFF_DLL) \
	$(PATH_LIB)/VBoxOGLcrunpacker$(VBOX_SUFF_LIB) \
	$(PATH_LIB)/VBoxOGLhostcrpacker$(VBOX_SUFF_LIB) \
	$(PATH_LIB)/VBoxOGLhostcrstate$(VBOX_SUFF_LIB) \
	$(PATH_LIB)/VBoxOGLhostspuload$(VBOX_SUFF_LIB) \
	$(PATH_BIN)/VBoxOGLhostcrutil$(VBOX_SUFF_DLL) \
	$(LIB_RUNTIME) $(LIB_VMM)
endif
VBoxSharedCrOpenGL_LIBS.darwin += $(LIB_REM)

#
# VBoxOGLcrserverlib
#

VBoxOGLcrserverlib_TEMPLATE = VBOXOGLR3HOST
VBoxOGLcrserverlib_INCS := $(PATH_SUB_CURRENT)/crserverlib
VBoxOGLcrserverlib_SOURCES := \
	crserverlib/server_main.c \
	crserverlib/server_boundsinfo.c \
	crserverlib/server_bufferobject.c \
	crserverlib/server_clear.c \
	crserverlib/server_clip.c \
	crserverlib/server_config.c \
	crserverlib/server_context.c \
	crserverlib/server_gentextures.c \
	crserverlib/server_getmap.c \
	crserverlib/server_getstring.c \
	crserverlib/server_getpointer.c \
	crserverlib/server_getpixelmap.c \
	crserverlib/server_getteximage.c \
	crserverlib/server_lists.c \
	crserverlib/server_misc.c \
	crserverlib/server_occlude.c \
	crserverlib/server_papi.c \
	crserverlib/server_projmatrix.c \
	crserverlib/server_readpixels.c \
	crserverlib/server_stream.c \
	crserverlib/server_tiles.c \
	crserverlib/server_viewport.c \
	crserverlib/server_window.c \
	crserverlib/server_winpos.c \
	crserverlib/server_writeback.c \
	$(VBOX_PATH_CROGL_GENFILES)/server_dispatch.c \
	$(VBOX_PATH_CROGL_GENFILES)/server_retval.c \
	$(VBOX_PATH_CROGL_GENFILES)/server_get.c \
	$(VBOX_PATH_CROGL_GENFILES)/server_simpleget.c
VBoxOGLcrserverlib_INTERMEDIATES := \
	$(VBOX_PATH_CROGL_GENFILES)/spu_dispatch_table.h \
	$(VBOX_PATH_CROGL_GENFILES)/server_dispatch.h \
	$(VBOX_PATH_CROGL_GENFILES)/state/cr_currentpointers.h \
	$(VBOX_PATH_CROGL_GENFILES)/state/cr_statefuncs.h
VBoxOGLcrserverlib_CLEAN := \
	$(VBOX_PATH_CROGL_GENFILES)/server_dispatch.c \
	$(VBOX_PATH_CROGL_GENFILES)/server_retval.c \
	$(VBOX_PATH_CROGL_GENFILES)/server_get.c \
	$(VBOX_PATH_CROGL_GENFILES)/server_simpleget.c \
	$(VBOX_PATH_CROGL_GENFILES)/server_dispatch.h
VBoxOGLcrserverlib_LIBS.win = \
	$(PATH_OBJ)/VBoxOGLhostcrutil/VBoxOGLhostcrutil$(VBOX_SUFF_LIB) \
	$(PATH_LIB)/VBoxOGLhostcrpacker$(VBOX_SUFF_LIB) \
	$(PATH_LIB)/VBoxOGLhostspuload$(VBOX_SUFF_LIB) \
	$(PATH_LIB)/VBoxOGLcrunpacker$(VBOX_SUFF_LIB) \
	$(PATH_LIB)/VBoxOGLhostcrstate$(VBOX_SUFF_LIB)
if1of ($(KBUILD_TARGET), linux solaris darwin)
 VBoxOGLcrserverlib_LIBS += \
	$(PATH_BIN)/VBoxOGLhostcrpacker$(VBOX_SUFF_DLL) \
	$(PATH_BIN)/VBoxOGLhostspuload$(VBOX_SUFF_DLL) \
	$(PATH_BIN)/VBoxOGLcrunpacker$(VBOX_SUFF_DLL) \
	$(PATH_BIN)/VBoxOGLhostcrstate$(VBOX_SUFF_DLL) \
	$(PATH_BIN)/VBoxOGLhostcrutil$(VBOX_SUFF_DLL)
endif

$(VBOX_PATH_CROGL_GENFILES)/server_dispatch.h: $(addprefix $(PATH_SUB_CURRENT)/crserverlib/, server_dispatch_header.py server_special) $(VBOX_CROGL_API_FILES) | $$(dir $$@)
	$(call VBOX_CROGL_PYTHON_ENV,$(VBOX_CROGL_HOST_PYTHONPATH),$@) $(VBOX_BLD_PYTHON) $< $(VBOX_PATH_CROGL_GLAPI) $(<D)

$(VBOX_PATH_CROGL_GENFILES)/server_dispatch.c: $(addprefix $(PATH_SUB_CURRENT)/crserverlib/, server_dispatch.py server_special) $(VBOX_CROGL_API_FILES) | $$(dir $$@)
	$(call VBOX_CROGL_PYTHON_ENV,$(VBOX_CROGL_HOST_PYTHONPATH),$@) $(VBOX_BLD_PYTHON) $< $(VBOX_PATH_CROGL_GLAPI) $(<D)

$(VBOX_PATH_CROGL_GENFILES)/server_retval.c: $(addprefix $(PATH_SUB_CURRENT)/crserverlib/, server_retval.py server_special) $(VBOX_CROGL_API_FILES) | $$(dir $$@)
	$(call VBOX_CROGL_PYTHON_ENV,$(VBOX_CROGL_HOST_PYTHONPATH),$@) $(VBOX_BLD_PYTHON) $< $(VBOX_PATH_CROGL_GLAPI) $(<D)

$(VBOX_PATH_CROGL_GENFILES)/server_get.c: $(addprefix $(PATH_SUB_CURRENT)/crserverlib/, server_get.py server_special get_components.py) $(VBOX_CROGL_API_FILES) | $$(dir $$@)
	$(call VBOX_CROGL_PYTHON_ENV,$(VBOX_CROGL_HOST_PYTHONPATH),$@) $(VBOX_BLD_PYTHON) $< $(VBOX_PATH_CROGL_GLAPI) $(<D)

$(VBOX_PATH_CROGL_GENFILES)/server_simpleget.c: $(addprefix $(PATH_SUB_CURRENT)/crserverlib/, server_simpleget.py get_sizes.py) $(VBOX_CROGL_API_FILES) | $$(dir $$@)
	$(call VBOX_CROGL_PYTHON_ENV,$(VBOX_CROGL_HOST_PYTHONPATH),$@) $(VBOX_BLD_PYTHON) $< $(VBOX_PATH_CROGL_GLAPI) $(<D)

#
# VBoxOGLcrunpacker
#

VBoxOGLcrunpacker_TEMPLATE       = VBOXOGLR3HOST
VBoxOGLcrunpacker_INCS          := $(PATH_SUB_CURRENT)/unpacker
VBoxOGLcrunpacker_INTERMEDIATES  = \
	$(VBOX_PATH_CROGL_GENFILES)/spu_dispatch_table.h \
	$(VBOX_PATH_CROGL_GENFILES)/cr_opcodes.h \
	$(VBOX_PATH_CROGL_GENFILES)/unpack_extend.h
VBoxOGLcrunpacker_SOURCES       := \
	unpacker/unpack_arrays.c \
	unpacker/unpack_bounds.c \
	unpacker/unpack_bufferobject.c \
	unpacker/unpack_calllists.c \
	unpacker/unpack_clipplane.c \
	unpacker/unpack_context.c \
	unpacker/unpack_drawpixels.c \
	unpacker/unpack_fence.c \
	unpacker/unpack_fog.c \
	unpacker/unpack_lights.c \
	unpacker/unpack_map.c \
	unpacker/unpack_materials.c \
	unpacker/unpack_matrices.c \
	unpacker/unpack_misc.c \
	unpacker/unpack_pixelmap.c \
	unpacker/unpack_point.c \
	unpacker/unpack_program.c \
	unpacker/unpack_readpixels.c \
	unpacker/unpack_regcombiner.c \
	unpacker/unpack_stipple.c \
	unpacker/unpack_texture.c \
	unpacker/unpack_writeback.c \
	unpacker/unpack_visibleregion.c \
	$(VBOX_PATH_CROGL_GENFILES)/unpack.c
VBoxOGLcrunpacker_CLEAN         := \
	$(VBOX_PATH_CROGL_GENFILES)/unpack.c \
	$(VBOX_PATH_CROGL_GENFILES)/unpack_extend.h
VBoxOGLcrunpacker_LIBS.win       = \
	$(PATH_OBJ)/VBoxOGLhostcrutil/VBoxOGLhostcrutil$(VBOX_SUFF_LIB) \
	$(PATH_LIB)/VBoxOGLhostspuload$(VBOX_SUFF_LIB) \
	$(PATH_LIB)/VBoxOGLhostcrpacker$(VBOX_SUFF_LIB)
if1of ($(KBUILD_TARGET), linux solaris darwin)
 VBoxOGLcrunpacker_LIBS += \
	$(PATH_BIN)/VBoxOGLhostcrpacker$(VBOX_SUFF_DLL) \
	$(PATH_BIN)/VBoxOGLhostspuload$(VBOX_SUFF_DLL) \
	$(PATH_BIN)/VBoxOGLhostcrutil$(VBOX_SUFF_DLL)
endif

$(VBOX_PATH_CROGL_GENFILES)/unpack.c: $(addprefix $(PATH_SUB_CURRENT)/unpacker/, unpack.py unpacker_special) $(VBOX_PATH_CROGL_GENFILES)/unpack_extend.h $(VBOX_CROGL_API_FILES) | $$(dir $$@)
	$(call VBOX_CROGL_PYTHON_ENV,$(VBOX_CROGL_HOST_PYTHONPATH),$@) $(VBOX_BLD_PYTHON) $< $(VBOX_PATH_CROGL_GLAPI) $(<D)

$(VBOX_PATH_CROGL_GENFILES)/unpack_extend.h: $(addprefix $(PATH_SUB_CURRENT)/unpacker/, unpack_extend.py unpacker_special) $(VBOX_CROGL_API_FILES) | $$(dir $$@)
	$(call VBOX_CROGL_PYTHON_ENV,$(VBOX_CROGL_HOST_PYTHONPATH),$@) $(VBOX_BLD_PYTHON) $< $(VBOX_PATH_CROGL_GLAPI) $(<D)

#
# VBoxOGLrenderspu
#

VBoxOGLrenderspu_TEMPLATE = VBOXOGLR3HOST
VBoxOGLrenderspu_LIBS += $(LIB_RUNTIME)
VBoxOGLrenderspu_LDFLAGS.darwin += -install_name $(VBOX_DYLD_EXECUTABLE_PATH)/VBoxOGLrenderspu.dylib
VBoxOGLrenderspu_SOURCES := \
	render/renderspu.c \
	render/renderspu_config.c \
	render/renderspu_init.c
VBoxOGLrenderspu_SOURCES.win     = render/renderspu_wgl.c render/render.def
VBoxOGLrenderspu_SOURCES.linux   = render/renderspu_glx.c
VBoxOGLrenderspu_SOURCES.solaris = render/renderspu_glx.c
VBoxOGLrenderspu_SOURCES.darwin  = render/renderspu_agl.c
VBoxOGLrenderspu_INTERMEDIATES = \
	$(VBOX_PATH_CROGL_GENFILES)/state/cr_currentpointers.h \
	$(VBOX_PATH_CROGL_GENFILES)/state/cr_statefuncs.h
VBoxOGLrenderspu_LIBS.win      = \
	$(PATH_OBJ)/VBoxOGLhostcrutil/VBoxOGLhostcrutil$(VBOX_SUFF_LIB) \
	$(PATH_LIB)/VBoxOGLhostspuload$(VBOX_SUFF_LIB)
if1of ($(KBUILD_TARGET), linux solaris darwin)
 VBoxOGLrenderspu_LIBS += \
	$(PATH_BIN)/VBoxOGLhostcrutil$(VBOX_SUFF_DLL) \
	$(PATH_LIB)/VBoxOGLhostspuload$(VBOX_SUFF_LIB)
endif
if1of ($(KBUILD_TARGET), linux solaris)
 VBoxOGLrenderspu_LIBPATH += $(VBOX_LIBPATH_X11)
 VBoxOGLrenderspu_LIBS += \
	Xmu X11 Xext
endif

include	$(KBUILD_PATH)/subfooter.kmk

